{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/common/stripe.service.ts","./src/app/components/add-user/add-user.component.css","./src/app/components/add-user/add-user.component.html","./src/app/components/add-user/add-user.component.ts","./src/app/components/admin-dashboard/admin-dashboard.component.css","./src/app/components/admin-dashboard/admin-dashboard.component.html","./src/app/components/admin-dashboard/admin-dashboard.component.ts","./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.css","./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.html","./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/manager-dashboard/manager-dashboard.component.css","./src/app/components/manager-dashboard/manager-dashboard.component.html","./src/app/components/manager-dashboard/manager-dashboard.component.ts","./src/app/components/manager/manager.component.css","./src/app/components/manager/manager.component.html","./src/app/components/manager/manager.component.ts","./src/app/components/medicine/medicine.component.css","./src/app/components/medicine/medicine.component.html","./src/app/components/medicine/medicine.component.ts","./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.css","./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.html","./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.ts","./src/app/components/pharmasist/pharmasist.component.css","./src/app/components/pharmasist/pharmasist.component.html","./src/app/components/pharmasist/pharmasist.component.ts","./src/app/components/salesman-dashboard/salesman-dashboard.component.css","./src/app/components/salesman-dashboard/salesman-dashboard.component.html","./src/app/components/salesman-dashboard/salesman-dashboard.component.ts","./src/app/components/salesman/salesman.component.css","./src/app/components/salesman/salesman.component.html","./src/app/components/salesman/salesman.component.ts","./src/app/components/update-manager/update-manager.component.css","./src/app/components/update-manager/update-manager.component.html","./src/app/components/update-manager/update-manager.component.ts","./src/app/components/update-medicine/update-medicine.component.css","./src/app/components/update-medicine/update-medicine.component.html","./src/app/components/update-medicine/update-medicine.component.ts","./src/app/components/view-medicine/view-medicine.component.css","./src/app/components/view-medicine/view-medicine.component.html","./src/app/components/view-medicine/view-medicine.component.ts","./src/app/gaurds/auth.gaurd.ts","./src/app/gaurds/manager.gaurd.ts","./src/app/gaurds/pharmasist.guard.ts","./src/app/gaurds/salesman.gaurd.ts","./src/app/model/cart.ts","./src/app/model/medicine.ts","./src/app/model/user.ts","./src/app/services/auth.service.ts","./src/app/services/medicine.service.ts","./src/app/services/pager-services.service.ts","./src/app/services/search-service.service.ts","./src/app/services/toaster-service.service.ts","./src/app/services/validation.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVyC;AACc;AACqB;AACV;AACuB;AACf;AACoC;AACf;AACvB;AACoB;AACX;AACN;AACoB;AACS;AACH;AACtD;AACK;AACoF;AAClF;AACI;AAG1D,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,yFAAc,EAAC;IAClC,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAE,kGAAiB,EAAC;IAC/C,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAE,yFAAc,EAAC;IACzC,EAAC,IAAI,EAAC,cAAc,EAAE,SAAS,EAAE,gHAAqB,EAAC;IACvD,EAAC,IAAI,EAAC,SAAS,EAAE,SAAS,EAAC,iGAAgB,EAAC;IAC5C,EAAC,IAAI,EAAC,aAAa,EAAE,SAAS,EAAC,iGAAgB,EAAC;IAChD,EAAC,IAAI,EAAC,YAAY,EAAE,SAAS,EAAE,qIAA4B,EAAE,WAAW,EAAE,CAAC,kFAAe,CAAC,EAAC;IAC5F,EAAC,IAAI,EAAC,YAAY,EAAE,SAAS,EAAE,sHAAuB,EAAE,WAAW,EAAE,CAAC,sEAAS,CAAC,EAAC;IACjF,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,+FAAgB,EAAE,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAC;IAC3E,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,mHAAsB,EAAC;IAC/D,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,yGAAmB,EAAC;IACpD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mGAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,uHAAuB,EAAC;IACjE,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,uHAAuB,EAAC;IAC7D,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gIAA0B,EAAE,WAAW,EAAE,CAAC,8EAAa,CAAC,EAAC;IACzF,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,6HAAyB,EAAE,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAC;IACvF,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAE,gKAAoC,EAAC;CAC/D,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,+DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,qEAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;AC9C7B,mB;;;;;;;ACAA,wD;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,gEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AAET;AAC8B;AACT;AACR;AACI;AACvB;AACW;AACuC;AACf;AACoC;AACzC;AAC0B;AACvB;AACoB;AACX;AACN;AACoB;AACS;AACjC;AAC8B;AACzD;AACM;AACiB;AACe;AAC7B;AAC4C;AACuC;AAChF;AACJ;AACA;AACU;AACA;AACT;AACU;AAqDjE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlDrB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,kGAAiB;gBACjB,yFAAc;gBACd,iHAAqB;gBACrB,kGAAgB;gBAChB,sIAA4B;gBAC5B,uHAAuB;gBACvB,gGAAgB;gBAChB,oHAAsB;gBACtB,yGAAmB;gBACnB,mGAAiB;gBACjB,uHAAuB;gBACvB,gIAA0B;gBAC1B,6HAAyB;gBACzB,gKAAoC;gBACpC,uFAAa;aACd;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,6EAAgB;gBAChB,mEAAW;gBACX,2EAAmB;gBACnB,yDAAU;gBACV,8FAAqB;gBACrB,2EAAe;gBACf,0EAAc;gBACd,6EAAiB;gBACjB,8EAAkB;gBAClB,2EAAmB;gBACnB,sGAAuB;gBACvB,mGAAoB;gBACpB,8EAAkB;aACnB;YACD,SAAS,EAAE;gBACT,mFAAe;gBACf,2EAAW;gBACX,+FAAoB;gBACpB,iGAAqB;gBACrB,sEAAS;gBACT,4EAAY;gBACZ,kFAAe;gBACf,8EAAa;gBACb,wFAAa;gBACb,wFAAiB;gBACjB,8EAAa;aACd;YACD,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FmB;AAC8B;AAC1B;AACf;AACG;AACF;AACI;AAInC;IACE,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAElC,sCAAc,GAAd,UAAe,WAAW,EAAE,WAAW,EAAE,MAAM;QAC7C,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,6DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAExD,IAAI,IAAI,GAAG;YACT,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,YAAY,EAAE,MAAM;SACrB,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qCAAqC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC;aACxF,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,mCAAW,GAAnB,UAAoB,KAAgB;QAClC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IA1BU,aAAa;QADzB,iEAAU,EAAE;yCAEe,mDAAI;OADnB,aAAa,CA2BzB;IAAD,oBAAC;CAAA;AA3ByB;;;;;;;;ACV1B,4CAA4C,gDAAgD,mBAAmB,KAAK,6BAA6B,mBAAmB,iDAAiD,KAAK,qB;;;;;;;ACA1N,qGAAqG,mBAAmB,gCAAgC,sFAAsF,qBAAqB,sBAAsB,UAAU,gUAAgU,0FAA0F,4fAA4f,wFAAwF,ufAAuf,sFAAsF,kfAAkf,sFAAsF,gfAAgf,kFAAkF,seAAse,kFAAkF,seAAse,wFAAwF,ufAAuf,wFAAwF,gfAAgf,wFAAwF,mTAAmT,QAAQ,oIAAoI,IAAI,sLAAsL,cAAc,wPAAwP,UAAU,oJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5kM;AAC6B;AACzC;AACS;AACC;AACQ;AACb;AAC0B;AACS;AAQ9E;IAmBE,0BAEU,WAAwB,EACxB,MAAc,EACd,WAAwB,EACxB,KAAqB,EACrB,QAAkB,EAClB,iBAAoC,EACpC,cAAqC;QANrC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAuB;QAlB/C,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAWjD,CAAC;IAEL,mCAAQ,GAAR;QAEE,uDAAuD;QACvD,mCAAmC;QACnC,EAAE;QACF,gCAAgC;QAChC,KAAK;QAEL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAE9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAG,IAAI,CAAC,OAAO;YACtB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;IACJ,CAAC;IAED,uCAAY,GAAZ,UAAa,QAAmB;QAAhC,iBA4BC;QA1BC,IAAI,CAAC,IAAI,GAAG,IAAI,yDAAI,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEnC,EAAE,EAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC;YACtD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,EAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC;YACzD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YAChD,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,qBAAqB,GAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC,CAAC;IAEJ,CAAC;IAjFU,gBAAgB;QAL5B,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAsBuB,2EAAW;YAChB,+DAAM;YACD,mEAAW;YACjB,uEAAc;YACX,iEAAQ;YACC,uFAAiB;YACpB,gGAAqB;OA3BpC,gBAAgB,CAmF5B;IAAD,uBAAC;CAAA;AAnF4B;;;;;;;;AChB7B,4CAA4C,iDAAiD,mBAAmB,KAAK,6BAA6B,mBAAmB,iDAAiD,KAAK,mBAAmB,sBAAsB,mBAAmB,KAAK,mBAAmB,sBAAsB,iBAAiB,KAAK,a;;;;;;;ACA3V,0xCAA0xC,2VAA2V,uBAAuB,iBAAiB,mUAAmU,uBAAuB,oBAAoB,wUAAwU,uBAAuB,iBAAiB,2nDAA2nD,8LAA8L,sOAAsO,iPAAiP,qCAAqC,KAAK,uBAAuB,eAAe,uBAAuB,kBAAkB,uBAAuB,eAAe,uBAAuB,gBAAgB,wNAAwN,6LAA6L,0uBAA0uB,4NAA4N,mCAAmC,KAAK,qBAAqB,eAAe,qBAAqB,kBAAkB,qBAAqB,eAAe,qBAAqB,gBAAgB,4MAA4M,+NAA+N,mCAAmC,KAAK,qBAAqB,eAAe,qBAAqB,kBAAkB,qBAAqB,eAAe,qBAAqB,gBAAgB,sJAAsJ,WAAW,6KAA6K,iCAAiC,sFAAsF,iCAAiC,gJAAgJ,kCAAkC,4CAA4C,MAAM,0CAA0C,gDAAgD,yGAAyG,gDAAgD,2H;;;;;;;;;;;;;;;;;;;;;;;;;;ACA11P;AACe;AACW;AACrC;AACkB;AACqB;AACV;AAC/B;AAQrC;IAME,iCACU,eAAgC,EAChC,YAAkC,EAClC,MAAc,EACd,WAAwB,EACxB,cAAqC,EACrC,aAA4B;QANtC,iBAaC;QAZS,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAuB;QACrC,kBAAa,GAAb,aAAa,CAAe;QARtC,gBAAW,GAAG,IAAI,6DAAO,EAAU,CAAC;QAuBpC,SAAS;QACD,oBAAe,GAAO,CAAC,CAAC;QAEhC,YAAY;QACJ,uBAAkB,GAAO,CAAC,CAAC;QAEnC,UAAU;QACF,oBAAe,GAAO,CAAC,CAAC;QAExB,eAAU,GAAO,EAAE,CAAC;QAE5B,eAAe;QACf,UAAK,GAAQ,EAAE,CAAC;QAxBd,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;aACxC,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAyBD,0CAAQ,GAAR;QAAA,iBAsDC;QApDC,IAAI,CAAC,cAAc,GAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAExD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAGjC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,yBAAyB;YAEzB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YAAA,CAAC;YAE1B,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;gBACtC,EAAE,EAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC;oBAC9B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3C,uBAAuB;YACvB,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,aAAG;YAEzC,wBAAwB;YAExB,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACnC,CAAC;gBACK,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,SAAS,CAAC,CAAC,CAAC;oBACnC,KAAI,CAAC,eAAe,EAAE,CAAC;oBACrB,qCAAqC;gBAEzC,CAAC;gBAEL,qCAAqC;gBAErC,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,YAAY,CAAC,CAAC,CAAC;oBACtC,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,qCAAqC;gBACvC,CAAC;gBAED,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,UAAU,CAAC,EAAC;oBACnC,+CAA+C;oBAC/C,KAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC;YAGH,CAAC;YAED,qCAAqC;YACrC,qCAAqC;YACrC,wCAAwC;QAE1C,CAAC,CAAC;IAGJ,CAAC;IAED,yCAAO,GAAP,UAAQ,IAAY;QAClB,gCAAgC;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEpE,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,4CAAU,GAAV;QAEE,IAAI,EAAE,GAAC,SAAS,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,+CAAa,GAAb;QAEE,IAAI,EAAE,GAAC,YAAY,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,6CAAW,GAAX;QAEE,IAAI,EAAE,GAAC,UAAU,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAEnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAnIU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAQ2B,mFAAe;YAClB,8FAAoB;YAC1B,+DAAM;YACD,2EAAW;YACR,gGAAqB;YACtB,uFAAa;OAZ3B,uBAAuB,CAqInC;IAAD,8BAAC;CAAA;AArImC;;;;;;;;ACfpC,mCAAmC,2BAA2B,2BAA2B,sBAAsB,WAAW,+BAA+B,sBAAsB,WAAW,O;;;;;;;ACA1L,4KAA4K,iBAAiB,+BAA+B,eAAe,6B;;;;;;;;;;;;;;;;;;;;;;ACAnM;AAED;AAE0B;AACG;AAMpE;IAcE,8CACU,aAA4B,EAC5B,eAAgC;QAF1C,iBASC;QARS,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAJ1C,gBAAW,GAAG,IAAI,6DAAO,EAAU,CAAC;QAOlC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;aACxC,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IApBD,uDAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;QAEhD,CAAC,CAAC;IACJ,CAAC;IAPU,oCAAoC;QALhD,gEAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;;;SAG9C,CAAC;yCAgByB,uFAAa;YACX,mFAAe;OAhB/B,oCAAoC,CA0BhD;IAAD,2CAAC;CAAA;AA1BgD;;;;;;;;ACXjD,mB;;;;;;;ACAA,6C;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC0B;AAErC;AACmB;AACnB;AAE0B;AACG;AAOpE;IAKE,uBACU,eAAgC,EAChC,YAAkC,EAClC,MAAc,EACd,aAA4B;QAJtC,iBAUC;QATS,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QANtC,gBAAW,GAAG,IAAI,6DAAO,EAAU,CAAC;QAcpC,cAAS,GAAgB,IAAI,KAAK,EAAQ,CAAC;QAE3C,aAAQ,GAAG,IAAI,yDAAI,EAAE,CAAC;QAEtB,QAAG,GAAU,CAAC,CAAC;QAIf,eAAe;QACf,UAAK,GAAQ,EAAE,CAAC;QAfd,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;aACxC,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAmBD,gCAAQ,GAAR;QAAA,iBAuBC;QApBC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAG9C,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YAAA,CAAC;YAE1B,uBAAuB;YACvB,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElB,CAAC,CAAC;QAEF,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC;YAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;gBACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAErH,CAAC;IACL,CAAC;IAGD,+BAAO,GAAP,UAAQ,IAAY;QAClB,gCAAgC;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEpE,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,iCAAS,GAAT,UAAU,QAAQ;QAGhB,IAAI,CAAC,QAAQ,GAAI,IAAI,yDAAI,EAAE,CAAC;QAE5B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAS,OAAO;YAC9C,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,EAAE;QACF,wBAAwB;QACxB,sBAAsB;QAEtB,EAAE,EAAC,KAAK,CAAC,CAAC,CAAC;YACT,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;oBAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAC5D,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAE5B,OAAO,CAAC,GAAG,CAAC,YAAY,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAEpD,mEAAmE;wBACnE,0CAA0C;oBAC5C,CAAC;YACL,CAAC;QACH,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;YAE3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EACxC,CAAC;gBACC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAChC,CAAC;YAED,2DAA2D;YAE3D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,CAAC;QAGD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QAED,+BAA+B;QAG/B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAI9D,CAAC;IAED,sCAAc,GAAd,UAAe,GAAG,EAAC,QAAQ;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE5C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAC7B,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC;oBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC7B,0CAA0C;YAC5C,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAE9D,CAAC;IAED,yCAAiB,GAAjB,UAAkB,QAAQ;QACxB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE5C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC3B,0CAA0C;YAC5C,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QAED,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAE9D,CAAC;IAED,yCAAiB,GAAjB,UAAkB,QAAQ;QACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAE1B,IAAI,gBAAgB,GAAqB;YACvC,WAAW,EAAE;gBACX,KAAK,EAAE,QAAQ,CAAC,GAAG;gBACnB,UAAU,EAAE,QAAQ,CAAC,QAAQ;aAC9B;SACF,CAAC;QAIF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE5C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAC/B,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC;oBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC7B,0CAA0C;YAC5C,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE,gBAAgB,CAAC,CAAC;IAC9D,CAAC;IA9MU,aAAa;QALzB,gEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAO2B,mFAAe;YAClB,8FAAoB;YAC1B,+DAAM;YACC,uFAAa;OAT3B,aAAa,CAiNzB;IAAD,oBAAC;CAAA;AAjNyB;;;;;;;;ACf1B,+B;;;;;;;ACAA,qGAAqG,mBAAmB,gCAAgC,sFAAsF,gBAAgB,qBAAqB,+UAA+U,kFAAkF,8eAA8e,kFAAkF,orB;;;;;;;;;;;;;;;;;;;;;;;;ACAlsC;AAC8B;AACxB;AACjB;AACA;AACuC;AAQ9E;IAYE,wBACU,WAAwB,EACxB,MAAc,EACd,WAAwB,EACxB,aAAoC;QAHpC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAuB;QAR9C,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAQjD,CAAC;IAEL,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;IACJ,CAAC;IAED,gCAAO,GAAP,UAAQ,QAAmB;QAA3B,iBAsCC;QApCC,IAAI,CAAC,IAAI,GAAG,IAAI,yDAAI,EAAE,CAAC;QAEvB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAG7C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAEpD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtB,EAAE,EAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBACpB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC/C,CAAC;YAAA,IAAI,EAAC;gBAEJ,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,4BAA4B,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAElF,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAE7D,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAExD,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAE,YAAY,CAAC,EAAC;oBACvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACxC,CAAC;gBAED,IAAI,CAAC,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAE,UAAU,CAAC;oBACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAExC,IAAI,CAAC,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAE,OAAO,CAAC;oBACtC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAExC,IAAI,CAAC,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAE,SAAS,CAAC;oBACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC1C,CAAC;QAEH,CAAC,CAAC;IAEJ,CAAC;IAhEU,cAAc;QAL1B,gEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAcuB,2EAAW;YAChB,+DAAM;YACD,mEAAW;YACT,gGAAqB;OAhBnC,cAAc,CAmE1B;IAAD,qBAAC;CAAA;AAnE0B;;;;;;;;ACb3B,4CAA4C,iDAAiD,mBAAmB,KAAK,6BAA6B,mBAAmB,iDAAiD,KAAK,mBAAmB,sBAAsB,mBAAmB,KAAK,mBAAmB,sBAAsB,iBAAiB,KAAK,a;;;;;;;ACA3V,69CAA69C,2VAA2V,uBAAuB,iBAAiB,mUAAmU,uBAAuB,oBAAoB,wUAAwU,uBAAuB,iBAAiB,2nDAA2nD,8LAA8L,sOAAsO,iPAAiP,qCAAqC,KAAK,uBAAuB,eAAe,uBAAuB,kBAAkB,uBAAuB,eAAe,uBAAuB,gBAAgB,0NAA0N,6LAA6L,41BAA41B,8OAA8O,qCAAqC,KAAK,uBAAuB,eAAe,uBAAuB,kBAAkB,uBAAuB,eAAe,uBAAuB,gBAAgB,8NAA8N,iPAAiP,qCAAqC,KAAK,uBAAuB,eAAe,uBAAuB,kBAAkB,uBAAuB,eAAe,uBAAuB,gBAAgB,oKAAoK,WAAW,uLAAuL,iCAAiC,4FAA4F,iCAAiC,sJAAsJ,kCAAkC,8CAA8C,MAAM,8CAA8C,gDAAgD,+GAA+G,gDAAgD,mI;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3wQ;AACe;AACW;AACrC;AACkB;AACoB;AACT;AAC/B;AASrC;IAME,mCACU,eAAgC,EAChC,YAAkC,EAClC,MAAc,EACd,WAAwB,EACxB,cAAqC,EACrC,aAA4B;QANtC,iBAcC;QAbS,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAuB;QACrC,kBAAa,GAAb,aAAa,CAAe;QARtC,gBAAW,GAAG,IAAI,6DAAO,EAAU,CAAC;QAsBhC,SAAS;QACD,oBAAe,GAAO,CAAC,CAAC;QAEhC,YAAY;QACJ,uBAAkB,GAAO,CAAC,CAAC;QAEnC,UAAU;QACF,oBAAe,GAAO,CAAC,CAAC;QAExB,eAAU,GAAO,EAAE,CAAC;QAE5B,eAAe;QACf,UAAK,GAAQ,EAAE,CAAC;QAtBlB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;aACxC,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAuBG,4CAAQ,GAAR;QAAA,iBAsDC;QApDC,IAAI,CAAC,cAAc,GAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAExD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAGjC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,yBAAyB;YAEzB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YAAA,CAAC;YAE1B,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;gBACtC,EAAE,EAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC;oBAC9B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3C,uBAAuB;YACvB,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,aAAG;YAEzC,wBAAwB;YAExB,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACnC,CAAC;gBACC,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,SAAS,CAAC,CAAC,CAAC;oBACnC,KAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,qCAAqC;gBAEvC,CAAC;gBAED,qCAAqC;gBAErC,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,YAAY,CAAC,CAAC,CAAC;oBACtC,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,qCAAqC;gBACvC,CAAC;gBAED,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,UAAU,CAAC,EAAC;oBACnC,+CAA+C;oBAC/C,KAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC;YAGH,CAAC;YAED,qCAAqC;YACrC,qCAAqC;YACrC,wCAAwC;QAE1C,CAAC,CAAC;IAGJ,CAAC;IAED,2CAAO,GAAP,UAAQ,IAAY;QAClB,gCAAgC;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEpE,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;IAGD,iDAAa,GAAb;QAEE,IAAI,EAAE,GAAC,YAAY,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,+CAAW,GAAX;QAEE,IAAI,EAAE,GAAC,UAAU,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEL,0CAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IA5HU,yBAAyB;QALrC,gEAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAQ2B,mFAAe;YAClB,8FAAoB;YAC1B,+DAAM;YACD,2EAAW;YACR,gGAAqB;YACtB,uFAAa;OAZ3B,yBAAyB,CA+HrC;IAAD,gCAAC;CAAA;AA/HqC;;;;;;;;AChBtC,mB;;;;;;;ACAA,gqDAAgqD,6PAA6P,kPAAkP,4EAA4E,kBAAkB,uBAAuB,iBAAiB,uBAAuB,iBAAiB,6c;;;;;;;;;;;;;;;;;;;;;;;ACA3wE;AACM;AACjB;AACD;AACwC;AAS9E;IAEE,0BACU,WAAwB,EACxB,MAAc,EACd,cAAqC;QAFrC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAuB;QAM/C,YAAO,GAAG,CAAC,IAAI,yDAAI,EAAE,CAAC,CAAC;QAEvB,mBAAc,GAAY,IAAI,CAAC;IAN/B,CAAC;IAQD,mCAAQ,GAAR;QAAA,iBAqBC;QAnBC,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAGvD,EAAE,EAAC,IAAI,CAAC,cAAc,IAAE,OAAO,CAAC;YAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAE,aAAG;YAC1C,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACnC,CAAC;gBACC,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAG,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC7D,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAC;YAEH,CAAC;QAIH,CAAC,CAAC;IACJ,CAAC;IAED,oCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,qCAAU,GAAV;QAEE,IAAI,EAAE,GAAC,SAAS,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,wCAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAmB,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAxDU,gBAAgB;QAL5B,gEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAIuB,2EAAW;YAChB,+DAAM;YACE,gGAAqB;OALpC,gBAAgB,CA0D5B;IAAD,uBAAC;CAAA;AA1D4B;;;;;;;;ACb7B,mB;;;;;;;ACAA,o2CAAo2C,gFAAgF,sdAAsd,sFAAsF,+eAA+e,gFAAgF,odAAod,sFAAsF,2eAA2e,kFAAkF,qfAAqf,wFAAwF,yuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjqI;AAC8B;AACjC;AACkB;AAC1B;AACuC;AACT;AAC3B;AAO1C;IAkBE,2BACU,WAAwB,EACxB,eAAgC,EAChC,MAAc,EACd,iBAAoC,EACpC,cAAqC,EACrC,QAAkB;QALlB,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAuB;QACrC,aAAQ,GAAR,QAAQ,CAAU;QAlB5B,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpD,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAenD,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;IACtC,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;IACJ,CAAC;IAED,0CAAc,GAAd,UAAe,QAAmB;QAAlC,iBAsBC;QArBC,IAAI,CAAC,QAAQ,GAAG,IAAI,iEAAQ,EAAE,CAAC;QAE/B,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAEjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,EAAE,EAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC;YAC1D,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC/C,SAAS,CAAE,kBAAQ;YAClB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YAC5D,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC,CAAC;IACN,CAAC;IA9DU,iBAAiB;QAL7B,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAoBuB,mEAAW;YACP,mFAAe;YACxB,+DAAM;YACK,uFAAiB;YACpB,gGAAqB;YAC3B,iEAAQ;OAxBjB,iBAAiB,CAgE7B;IAAD,wBAAC;CAAA;AAhE6B;;;;;;;;ACd9B,4CAA4C,gDAAgD,mBAAmB,KAAK,iCAAiC,mBAAmB,iDAAiD,KAAK,C;;;;;;;ACA9N,4rDAA4rD,ySAAyS,qCAAqC,KAAK,uBAAuB,eAAe,uBAAuB,kBAAkB,uBAAuB,eAAe,uBAAuB,mBAAmB,2hBAA2hB,WAAW,uLAAuL,iCAAiC,4FAA4F,iCAAiC,sJAAsJ,kCAAkC,8CAA8C,MAAM,8CAA8C,gDAAgD,+GAA+G,gDAAgD,+H;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh+G;AACqB;AACxC;AAE6C;AACX;AAC1B;AACiB;AACqB;AAO7E;IAEE,sCACU,IAAU,EACV,YAAkC,EAClC,eAAgC,EAChC,MAAc,EACd,WAAwB,EACxB,cAAqC;QALrC,SAAI,GAAJ,IAAI,CAAM;QACV,iBAAY,GAAZ,YAAY,CAAsB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAuB;QAM/C,eAAe;QACf,UAAK,GAAQ,EAAE,CAAC;IANZ,CAAC;IAWL,+CAAQ,GAAR;QAAA,iBAWC;QATC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,yBAAyB;YAEzB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YAAA,CAAC;YAE1B,uBAAuB;YACvB,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;IAEJ,CAAC;IAED,8CAAO,GAAP,UAAQ,IAAY;QAClB,gCAAgC;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEpE,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,qDAAc,GAAd,UAAe,EAAE;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAmB,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,kDAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,6CAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IArDU,4BAA4B;QALxC,gEAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;yCAIgB,mDAAI;YACI,8FAAoB;YACjB,mFAAe;YACxB,+DAAM;YACD,2EAAW;YACR,gGAAqB;OARpC,4BAA4B,CAuDxC;IAAD,mCAAC;CAAA;AAvDwC;;;;;;;;ACfzC,mB;;;;;;;ACAA,spDAAspD,UAAU,2EAA2E,0BAA0B,UAAU,6MAA6M,kPAAkP,mGAAmG,kBAAkB,uBAAuB,iBAAiB,uBAAuB,iBAAiB,6c;;;;;;;;;;;;;;;;;;;;;;;ACAj2E;AACM;AACjB;AACD;AACuC;AAO7E;IAEE,6BAEU,WAAwB,EACxB,MAAc,EACd,cAAqC;QAFrC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAuB;QAI/C,YAAO,GAAG,CAAC,IAAI,yDAAI,EAAE,CAAC,CAAC;IAHnB,CAAC;IAUL,sCAAQ,GAAR;QAAA,iBAkBC;QAhBC,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEvD,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAE,aAAG;YAC1C,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACnC,CAAC;gBACC,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAG,YAAY,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACrC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAC;YAEH,CAAC;QAIH,CAAC,CAAC;IACJ,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,wCAAU,GAAV;QAEE,IAAI,EAAE,GAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,2CAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAmB,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAvDU,mBAAmB;QAL/B,gEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAKuB,2EAAW;YAChB,+DAAM;YACE,gGAAqB;OANpC,mBAAmB,CA0D/B;IAAD,0BAAC;CAAA;AA1D+B;;;;;;;;ACXhC,mB;;;;;;;ACAA,8pBAA8pB,wOAAwO,yEAAyE,KAAK,qBAAqB,eAAe,qBAAqB,mBAAmB,qBAAqB,kCAAkC,o6BAAo6B,KAAK,k0BAAk0B,gMAAgM,yEAAyE,KAAK,qBAAqB,eAAe,qBAAqB,mBAAmB,qBAAqB,kCAAkC,qRAAqR,KAAK,mHAAmH,cAAc,sGAAsG,gBAAgB,ovCAAovC,iBAAiB,0CAA0C,eAAe,4KAA4K,kSAAkS,mCAAmC,KAAK,qBAAqB,eAAe,qBAAqB,kBAAkB,qBAAqB,eAAe,qBAAqB,gBAAgB,qBAAqB,mBAAmB,wVAAwV,yRAAyR,mCAAmC,KAAK,qBAAqB,eAAe,qBAAqB,kBAAkB,qBAAqB,eAAe,qBAAqB,gBAAgB,qBAAqB,mBAAmB,8WAA8W,WAAW,6KAA6K,iCAAiC,sFAAsF,iCAAiC,gJAAgJ,kCAAkC,4CAA4C,MAAM,0CAA0C,gDAAgD,yGAAyG,gDAAgD,6G;;;;;;;;;;;;;;;;;;;;;;;;;ACA5oP;AAC0B;AAErC;AACmB;AACnB;AAE0B;AACG;AAOpE;IAME,oCACU,eAAgC,EAChC,YAAkC,EAClC,MAAc,EACd,aAA4B;QAJtC,iBAUC;QATS,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QANtC,gBAAW,GAAG,IAAI,6DAAO,EAAU,CAAC;QAqCpC,2BAA2B;QAE3B,cAAS,GAAgB,IAAI,KAAK,EAAQ,CAAC;QAE3C,aAAQ,GAAG,IAAI,yDAAI,EAAE,CAAC;QAEtB,QAAG,GAAU,CAAC,CAAC;QAIf,eAAe;QACf,UAAK,GAAQ,EAAE,CAAC;QAxCd,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;aACxC,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,0CAAK,GAAL;QACE,IAAI,aAAa,EAAE,QAAQ,CAAC;QAC5B,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;QACnE,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,qCAAqC,CAAC,CAAC;QAC5E,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,wTAWuB,aAAa,2BAClD,CACT,CAAC;QACF,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAqBD,6CAAQ,GAAR;QAAA,iBAuBC;QApBC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAG9C,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YAAA,CAAC;YAE1B,uBAAuB;YACvB,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElB,CAAC,CAAC;QAEF,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;gBACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAErH,CAAC;IACH,CAAC;IAGD,4CAAO,GAAP,UAAQ,IAAY;QAClB,gCAAgC;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEpE,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,8CAAS,GAAT,UAAU,QAAQ;QAGhB,IAAI,CAAC,QAAQ,GAAI,IAAI,yDAAI,EAAE,CAAC;QAE5B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAS,OAAO;YAC9C,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,EAAE;QACF,wBAAwB;QACxB,sBAAsB;QAEtB,EAAE,EAAC,KAAK,CAAC,CAAC,CAAC;YACT,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;oBAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAC5D,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;wBAE5B,OAAO,CAAC,GAAG,CAAC,YAAY,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBAEpD,mEAAmE;wBACnE,0CAA0C;oBAC5C,CAAC;YACL,CAAC;QACH,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;YAE3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EACxC,CAAC;gBACC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAChC,CAAC;YAED,2DAA2D;YAE3D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,CAAC;QAGD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QAEC,+BAA+B;QAGjC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAI9D,CAAC;IAED,mDAAc,GAAd,UAAe,GAAG,EAAC,QAAQ;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE5C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAC7B,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC;oBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC7B,0CAA0C;YAC5C,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAE9D,CAAC;IAED,sDAAiB,GAAjB,UAAkB,QAAQ;QACxB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE1C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC7B,0CAA0C;YAC5C,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QAED,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAE9D,CAAC;IAED,sDAAiB,GAAjB,UAAkB,QAAQ;QACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAE1B,IAAI,gBAAgB,GAAqB;YACvC,WAAW,EAAE;gBACX,KAAK,EAAE,QAAQ,CAAC,GAAG;gBACnB,UAAU,EAAE,QAAQ,CAAC,QAAQ;aAC9B;SACF,CAAC;QAIF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE5C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAC/B,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAE,CAAC,CAAC;oBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAC7B,0CAA0C;YAC5C,CAAC;QAEH,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAC9C,CAAC;YACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yCAAwC;YAEnH,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,qBAAoB;QACnD,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE,gBAAgB,CAAC,CAAC;IAC9D,CAAC;IAxOU,0BAA0B;QALtC,gEAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAQ2B,mFAAe;YAClB,8FAAoB;YAC1B,+DAAM;YACC,uFAAa;OAV3B,0BAA0B,CA0OtC;IAAD,iCAAC;CAAA;AA1OsC;;;;;;;;ACfvC,mB;;;;;;;ACAA,mqDAAmqD,oQAAoQ,kPAAkP,4EAA4E,kBAAkB,uBAAuB,iBAAiB,uBAAuB,iBAAiB,6c;;;;;;;;;;;;;;;;;;;;;;;ACArxE;AACM;AACjB;AACD;AACuC;AAO7E;IAEE,2BAEU,WAAwB,EACxB,MAAc,EACd,cAAqC;QAFrC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAuB;QAQ/C,YAAO,GAAG,CAAC,IAAI,yDAAI,EAAE,CAAC,CAAC;IAPnB,CAAC;IASL,oCAAQ,GAAR;QAAA,iBAiBC;QAfC,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAE,aAAG;YAC1C,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EACnC,CAAC;gBACC,EAAE,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAG,UAAU,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC9D,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAC;YAEH,CAAC;QAIH,CAAC,CAAC;IACJ,CAAC;IAED,qCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,sCAAU,GAAV;QAEE,IAAI,EAAE,GAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,EAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAmB,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IArDU,iBAAiB;QAL7B,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAKuB,2EAAW;YAChB,+DAAM;YACE,gGAAqB;OANpC,iBAAiB,CAyD7B;IAAD,wBAAC;CAAA;AAzD6B;;;;;;;;ACX9B,mB;;;;;;;ACAA,oHAAoH,mBAAmB,gCAAgC,wBAAwB,eAAe,0jE;;;;;;;;;;;;;;;;;;;;;;;;;ACA5J;AACK;AACE;AACsB;AACxC;AACuC;AACpC;AAO1C;IAME,gCACU,WAAwB,EACxB,MAAc,EACd,WAAwB,EACxB,KAAqB,EACrB,QAAkB,EAClB,cAAqC;QALrC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAuB;QAR/C,SAAI,GAAG,IAAI,yDAAI,EAAE,CAAC;IASd,CAAC;IAEL,yCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAEvC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5C,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC,CAAC;IAGJ,CAAC;IAED,yCAAQ,GAAR,UAAS,IAAI;QAAb,iBAMC;QALG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAE,aAAG;YAC9C,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YACrD,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACN,CAAC;IAhCU,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAQuB,2EAAW;YAChB,+DAAM;YACD,mEAAW;YACjB,uEAAc;YACX,iEAAQ;YACF,gGAAqB;OAZpC,sBAAsB,CAkClC;IAAD,6BAAC;CAAA;AAlCkC;;;;;;;;ACbnC,mB;;;;;;;ACAA,wHAAwH,mBAAmB,gCAAgC,yBAAyB,eAAe,gGAAgG,knD;;;;;;;;;;;;;;;;;;;;;;;;ACAjQ;AACH;AACkB;AACV;AACuB;AACpC;AAO1C;IAEE,iCACU,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,cAAqC,EACrC,QAAkB;QAJlB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAuB;QACrC,aAAQ,GAAR,QAAQ,CAAU;QAG5B,aAAQ,GAAI,IAAI,iEAAQ,EAAE,CAAC;QAEnB,aAAQ,GAAO,CAAC,CAAC;IAJrB,CAAC;IAML,0CAAQ,GAAR;QAAA,iBA0BC;QAxBC,IAAI,GAAG,CAAC;QAER,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YACrC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3B,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAChC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,GAAG,CAAC;QAC9C,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACtD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;YACzB,KAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC;YACxC,EAAE,EAAC,KAAI,CAAC,QAAQ,GAAC,CAAC,CAAC,EAAC;gBAClB,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;oBAC9D,uCAAuC;oBAEvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC;YACJ,CAAC;QACH,CAAC,CAAC;IAIJ,CAAC;IAED,0CAAQ,GAAR,UAAS,QAAQ;QAAjB,iBAQC;QANC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YACzD,uCAAuC;YAEvC,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAlDU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAI2B,mFAAe;YACzB,uEAAc;YACb,+DAAM;YACE,gGAAqB;YAC3B,iEAAQ;OAPjB,uBAAuB,CAoDnC;IAAD,8BAAC;CAAA;AApDmC;;;;;;;;ACZpC,4CAA4C,gDAAgD,mBAAmB,KAAK,6BAA6B,mBAAmB,iDAAiD,KAAK,qB;;;;;;;ACA1N,iMAAiM,+OAA+O,qCAAqC,KAAK,uBAAuB,eAAe,uBAAuB,kBAAkB,uBAAuB,eAAe,uBAAuB,gBAAgB,mF;;;;;;;;;;;;;;;;;;;;;;ACApkB;AACc;AACzB;AACQ;AAO/C;IAIE,+BACU,eAAgC,EAChC,MAAc;QADd,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAJxB,cAAS,GAAG,CAAC,IAAI,iEAAQ,EAAE,CAAC,CAAC;IAKzB,CAAC;IAEL,wCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,yBAAyB;YACzB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;YAE3B,8BAA8B;YAG7B,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;gBACvC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC;IAEJ,CAAC;IArBU,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAM2B,mFAAe;YACxB,+DAAM;OANb,qBAAqB,CAuBjC;IAAD,4BAAC;CAAA;AAvBiC;;;;;;;;;;;;;;;;;;;;;;ACVQ;AACY;AACA;AAGtD;IAGE,mBACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAGxB,CAAC;IAED,+BAAW,GAAX;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAE,OAAO,CAAC,EAAC;YACzE,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAGD,IAAI,CAAC,CAAC;YAEJ,MAAM,CAAC,KAAK,CAAC,mEAAmE,CAAC,CAAC;YAElF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEjC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAxBU,SAAS;QADrB,iEAAU,EAAE;yCAKY,2EAAW;YAChB,+DAAM;OALb,SAAS,CA6BrB;IAAD,gBAAC;CAAA;AA7BqB;;;;;;;;;;;;;;;;;;;;;;ACLoB;AACY;AACA;AAGtD;IAGE,sBACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAGxB,CAAC;IAED,kCAAW,GAAX;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAE,SAAS,IAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAE,OAAO,CAAC,EAAC;YACxH,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAGD,IAAI,CAAC,CAAC;YAEJ,MAAM,CAAC,KAAK,CAAC,8EAA8E,CAAC,CAAC;YAE7F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEjC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAxBU,YAAY;QADxB,iEAAU,EAAE;yCAKY,2EAAW;YAChB,+DAAM;OALb,YAAY,CA4BxB;IAAD,mBAAC;CAAA;AA5BwB;;;;;;;;;;;;;;;;;;;;;;ACLiB;AACY;AACA;AAGtD;IAGE,yBACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAGxB,CAAC;IAED,qCAAW,GAAX;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAE,YAAY,CAAC,EAAC;YAC9E,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAGD,IAAI,CAAC,CAAC;YAEJ,MAAM,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;YAEvF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEjC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAxBU,eAAe;QAD3B,iEAAU,EAAE;yCAKY,2EAAW;YAChB,+DAAM;OALb,eAAe,CA4B3B;IAAD,sBAAC;CAAA;AA5B2B;;;;;;;;;;;;;;;;;;;;;;ACLc;AACY;AACA;AAGtD;IAGE,uBACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAGxB,CAAC;IAED,mCAAW,GAAX;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAE,UAAU,CAAC,EAAC;YAC5E,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAGD,IAAI,CAAC,CAAC;YAEJ,MAAM,CAAC,KAAK,CAAC,sEAAsE,CAAC,CAAC;YAErF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEjC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAxBU,aAAa;QADzB,iEAAU,EAAE;yCAKY,2EAAW;YAChB,+DAAM;OALb,aAAa,CA4BzB;IAAD,oBAAC;CAAA;AA5ByB;;;;;;;;;ACL1B;AAAA;IACE;IAAc,CAAC;IAKjB,WAAC;AAAD,CAAC;;;;;;;;;;ACND;AAAA;IACE;IAAc,CAAC;IAOjB,eAAC;AAAD,CAAC;;;;;;;;;;ACRD;AAAA;IACE;IAAc,CAAC;IAUjB,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACX0C;AACE;AACd;AACe;AAEc;AAG5D;IAKE,qBACU,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;IACjB,CAAC;IAEL,6BAAO,GAAP,UAAQ,eAAe;QAErB,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,8EAAW,CAAC,OAAO,gBAAa,EAAC,eAAe,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACzF,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,iCAAW,GAAX;QAEE,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,8EAAW,CAAC,OAAO,cAAW,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACtE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,gCAAU,GAAV;QAGE,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAE5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,8EAAW,CAAC,OAAO,UAAO,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aAClE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAE5B,CAAC;IAED,mCAAa,GAAb,UAAc,EAAE;QAGd,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAE5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,8EAAW,CAAC,OAAO,cAAS,EAAI,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACxE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAE5B,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAI;QAGX,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAE5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,8EAAW,CAAC,OAAO,UAAO,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACxE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QAGb,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAE5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAI,8EAAW,CAAC,OAAO,cAAS,IAAI,CAAC,GAAK,EAAC,IAAI,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACrF,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAE5B,CAAC;IAGD,mCAAa,GAAb,UAAc,KAAK,EAAC,IAAI;QACtB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,8BAAQ,GAAR;QACE,MAAM,CAAC,qEAAe,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IA1FU,WAAW;QADvB,iEAAU,EAAE;yCAOM,mDAAI;OANV,WAAW,CA4FvB;IAAD,kBAAC;CAAA;AA5FuB;;;;;;;;;;;;;;;;;;;;;;;ACRmB;AACE;AAEd;AAE6B;AAG5D;IAEE,yBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IAEL,qCAAW,GAAX;QACE,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAEpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,8EAAW,CAAC,OAAO,cAAW,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACtE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1B,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QAErB,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,8EAAW,CAAC,OAAO,cAAW,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aAChF,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,2CAAiB,GAAjB,UAAkB,EAAE;QAElB,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,8EAAW,CAAC,OAAO,kBAAa,EAAI,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aAC5E,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QAGrB,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAI,8EAAW,CAAC,OAAO,kBAAa,QAAQ,CAAC,GAAK,EAAC,QAAQ,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACjG,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAxCU,eAAe;QAD3B,iEAAU,EAAE;yCAIK,mDAAI;OAHT,eAAe,CA4C3B;IAAD,sBAAC;CAAA;AA5C2B;;;;;;;;;;;;;;;;;ACRe;AAG3C;IAAA;IAoDA,CAAC;IAnDC,uCAAQ,GAAR,UAAS,UAAkB,EAAE,WAAuB,EAAE,QAAoB;QAA7C,6CAAuB;QAAE,uCAAoB;QACxE,wBAAwB;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC;QAElD,yCAAyC;QACzC,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;YACpB,WAAW,GAAG,CAAC,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC;YACpC,WAAW,GAAG,UAAU,CAAC;QAC3B,CAAC;QAED,IAAI,SAAiB,EAAE,OAAe,CAAC;QACvC,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;YACrB,uCAAuC;YACvC,SAAS,GAAG,CAAC,CAAC;YACd,OAAO,GAAG,UAAU,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,4DAA4D;YAC5D,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;gBACrB,SAAS,GAAG,CAAC,CAAC;gBACd,OAAO,GAAG,EAAE,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;gBACzC,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;gBAC3B,OAAO,GAAG,UAAU,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,GAAG,WAAW,GAAG,CAAC,CAAC;gBAC5B,OAAO,GAAG,WAAW,GAAG,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC;QAED,uCAAuC;QACvC,IAAI,UAAU,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAC9C,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;QAEnE,6DAA6D;QAC7D,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,gBAAS,GAAG,CAAC,EAAb,CAAa,CAAC,CAAC;QAExF,+DAA+D;QAC/D,MAAM,CAAC;YACL,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,UAAU;YACtB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC;IAlDU,oBAAoB;QADhC,iEAAU,EAAE;OACA,oBAAoB,CAoDhC;IAAD,2BAAC;CAAA;AApDgC;;;;;;;;;;;;;;;;;;;;;;;;;;ACHU;AACC;AAEb;AACS;AACQ;AACX;AAEsB;AAG3D;IAIE,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAH9B,YAAO,GAAW,iCAAiC,CAAC;QACpD,aAAQ,GAAW,UAAU,CAAC;QAUtB,UAAK,GAAG;YACd,SAAS,EAAC,MAAM;SACjB;IAViC,CAAC;IAEnC,8BAAM,GAAN,UAAO,KAAyB;QAAhC,iBAIC;QAHC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC;aAC3B,oBAAoB,EAAE;aACtB,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC;IAClD,CAAC;IAMD,qCAAa,GAAb,UAAc,IAAW;QAAX,oCAAW;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACxC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,sCAAc,GAAd,UAAe,IAAI;QAEjB,IAAI,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,8EAAW,CAAC,OAAO,yBAAoB,IAAM,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;aACrF,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IA7BU,aAAa;QADzB,iEAAU,EAAE;yCAKe,mDAAI;OAJnB,aAAa,CA8BzB;IAAD,oBAAC;CAAA;AA9ByB;;;;;;;;;;;;;;;;;;;;ACXiB;AAI3C;IAEE;IAAgB,CAAC;IAEjB,uCAAO,GAAP,UAAQ,KAAc,EAAE,OAAe;QACrC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED,uCAAO,GAAP,UAAQ,KAAc,EAAE,OAAe;QACrC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED,qCAAK,GAAL,UAAM,KAAc,EAAE,OAAe;QACnC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,oCAAI,GAAJ,UAAK,KAAc,EAAE,OAAe;QAClC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAlBU,qBAAqB;QADjC,iEAAU,EAAE;;OACA,qBAAqB,CAoBjC;IAAD,4BAAC;CAAA;AApBiC;;;;;;;;;;;;;;;;;;;;ACJS;AAG3C;IACQ;IAAgB,CAAC;IAGjB,4CAAgB,GAAhB,UAAiB,IAAI;QACnB,EAAE,EAAC,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAC;YAClE,MAAM,CAAC,KAAK;QACd,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI;QACb,CAAC;IAGH,CAAC;IAEP,4CAAgB,GAAhB,UAAiB,QAAQ;QAEvB,EAAE,EAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,IAAI,QAAQ,CAAC,OAAO,IAAI,EAAE,IAAI,QAAQ,CAAC,KAAK,IAAI,EAAE,IAAG,QAAQ,CAAC,QAAQ,IAAI,EAAE,IAAI,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,EAAC;YACzH,MAAM,CAAC,KAAK;QACd,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI;QACb,CAAC;IAGH,CAAC;IAEK,yCAAa,GAAb,UAAc,KAAK;QAEjB,IAAO,EAAE,GAAG,2JAA2J,CAAC;QACxK,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAExB,CAAC;IAhCI,iBAAiB;QAD7B,iEAAU,EAAE;;OACA,iBAAiB,CAiC7B;IAAD,wBAAC;CAAA;AAjC6B;;;;;;;;;ACH9B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,MAAM;IACf,kBAAkB;CAEnB,CAAC;;;;;;;;;;;;;;ACV6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qEAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MedicineComponent} from \"./components/medicine/medicine.component\";\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {ViewMedicineComponent} from \"./components/view-medicine/view-medicine.component\";\nimport {AddUserComponent} from \"./components/add-user/add-user.component\";\nimport {PharmasistDashboardComponent} from \"./components/pharmasist-dashboard/pharmasist-dashboard.component\";\nimport {AdminDashboardComponent} from \"./components/admin-dashboard/admin-dashboard.component\";\nimport {ManagerComponent} from \"./components/manager/manager.component\";\nimport {UpdateManagerComponent} from \"./components/update-manager/update-manager.component\";\nimport {PharmasistComponent} from \"./components/pharmasist/pharmasist.component\";\nimport {SalesmanComponent} from \"./components/salesman/salesman.component\";\nimport {UpdateMedicineComponent} from \"./components/update-medicine/update-medicine.component\";\nimport {SalesmanDashboardComponent} from \"./components/salesman-dashboard/salesman-dashboard.component\";\nimport {ManagerDashboardComponent} from \"./components/manager-dashboard/manager-dashboard.component\";\nimport { AuthGaurd} from \"./gaurds/auth.gaurd\";\nimport {ManagerGaurd} from \"./gaurds/manager.gaurd\";\nimport {AutocompleteOptgroupExampleComponent} from \"./components/autocomplete-optgroup-example/autocomplete-optgroup-example.component\";\nimport {SalesmanGaurd} from \"./gaurds/salesman.gaurd\";\nimport {PharmasistGuard} from \"./gaurds/pharmasist.guard\";\n\n\nconst routes: Routes = [\n  {path:'',component:LoginComponent},\n  {path:'medicine', component: MedicineComponent},\n  {path:'login', component: LoginComponent},\n  {path:'viewMedicine', component: ViewMedicineComponent},\n  {path:'addUser', component:AddUserComponent},\n  {path:'addUser/:id', component:AddUserComponent},\n  {path:'pDashboard', component: PharmasistDashboardComponent, canActivate: [PharmasistGuard]},\n  {path:'aDashboard', component: AdminDashboardComponent, canActivate: [AuthGaurd]},\n  {path: 'manager', component: ManagerComponent, canActivate: [ManagerGaurd]},\n  {path: 'update-manager/:id', component: UpdateManagerComponent},\n  {path: 'pharmasist', component: PharmasistComponent},\n  {path: 'salesman', component: SalesmanComponent},\n  {path: 'update-medicine/:id', component: UpdateMedicineComponent},\n  {path: 'update-medicine', component: UpdateMedicineComponent},\n  {path: 'sDashboard', component: SalesmanDashboardComponent, canActivate: [SalesmanGaurd]},\n  {path: 'mDashboard', component: ManagerDashboardComponent, canActivate: [ManagerGaurd]},\n  {path:'auto', component: AutocompleteOptgroupExampleComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { MedicineComponent } from './components/medicine/medicine.component';\nimport { LoginComponent } from './components/login/login.component';\nimport {MedicineService} from \"./services/medicine.service\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpModule} from \"@angular/http\";\nimport {AuthService} from \"./services/auth.service\";\nimport { ViewMedicineComponent } from './components/view-medicine/view-medicine.component';\nimport { AddUserComponent } from './components/add-user/add-user.component';\nimport { PharmasistDashboardComponent } from './components/pharmasist-dashboard/pharmasist-dashboard.component';\nimport {PagerServicesService} from \"./services/pager-services.service\";\nimport { AdminDashboardComponent } from './components/admin-dashboard/admin-dashboard.component';\nimport { ManagerComponent } from './components/manager/manager.component';\nimport { UpdateManagerComponent } from './components/update-manager/update-manager.component';\nimport { PharmasistComponent } from './components/pharmasist/pharmasist.component';\nimport { SalesmanComponent } from './components/salesman/salesman.component';\nimport { UpdateMedicineComponent } from './components/update-medicine/update-medicine.component';\nimport { SalesmanDashboardComponent } from './components/salesman-dashboard/salesman-dashboard.component';\nimport {ToasterServiceService} from \"./services/toaster-service.service\";\nimport { ManagerDashboardComponent } from './components/manager-dashboard/manager-dashboard.component';\nimport {AuthGaurd} from \"./gaurds/auth.gaurd\";\nimport {ManagerGaurd} from \"./gaurds/manager.gaurd\";\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule, MatCheckboxModule, MatInputModule} from \"@angular/material\"\nimport { MatFormFieldModule } from '@angular/material';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { AutocompleteOptgroupExampleComponent } from './components/autocomplete-optgroup-example/autocomplete-optgroup-example.component';\nimport {PharmasistGuard} from \"./gaurds/pharmasist.guard\";\nimport {SalesmanGaurd} from \"./gaurds/salesman.gaurd\";\nimport { AutoCompleteModule} from \"ng4-auto-complete\";\nimport {SearchService} from \"./services/search-service.service\";\nimport {ValidationService} from \"./services/validation.service\";\nimport { StripeService} from \"./common/stripe.service\";\nimport { HomeComponent } from './components/home/home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MedicineComponent,\n    LoginComponent,\n    ViewMedicineComponent,\n    AddUserComponent,\n    PharmasistDashboardComponent,\n    AdminDashboardComponent,\n    ManagerComponent,\n    UpdateManagerComponent,\n    PharmasistComponent,\n    SalesmanComponent,\n    UpdateMedicineComponent,\n    SalesmanDashboardComponent,\n    ManagerDashboardComponent,\n    AutocompleteOptgroupExampleComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    AutoCompleteModule\n  ],\n  providers: [\n    MedicineService,\n    AuthService,\n    PagerServicesService,\n    ToasterServiceService,\n    AuthGaurd,\n    ManagerGaurd,\n    PharmasistGuard,\n    SalesmanGaurd,\n    SearchService,\n    ValidationService,\n    StripeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class StripeService {\r\n  constructor(private http: Http) {}\r\n\r\n  confirmPayment(stripeEmail, stripeToken, amount) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    const options = new RequestOptions({ headers: headers});\r\n\r\n    let body = {\r\n      stripeEmail: stripeEmail,\r\n      stripeToken: stripeToken,\r\n      stripeAmount: amount\r\n    };\r\n    console.log('In conform payment');\r\n    return this.http.post(`http://localhost:3000/stripe/charge`, JSON.stringify(body), options)\r\n      .map(res => res.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error?: Response) {\r\n    if (error) {\r\n      console.log(error);\r\n      return Observable.throw(error.json().error || 'Server Error');\r\n    } else {\r\n      console.log('Unknown err');\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/stripe.service.ts","module.exports = \"table tr:nth-child(even) {\\r\\n  background-color: rgba(25, 207, 193, 0.7);\\r\\n  color: white;\\r\\n}\\r\\ntable tr:nth-child(odd) {\\r\\n  color: white;\\r\\n  background-color: rgba(145, 142, 176, 0.7);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/add-user/add-user.component.css\n// module id = ./src/app/components/add-user/add-user.component.css\n// module chunks = main","module.exports = \"<div  class=\\\"bg\\\">\\n  <div class=\\\"container\\\">\\n\\n    <h1 style=\\\"margin-top: 3%;text-align: center; font-family: 'Times New Roman'; color: azure\\\">Pharmacy Management System</h1>\\n\\n    <h3 style=\\\"text-align: center;font-family: Verdana; color: azure\\\">Add {{Category}}</h3>\\n    <div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\n      <div style=\\\"margin-left: 15%\\\" class=\\\"col-xs-8 col-sm-8 col-md-8 \\\">\\n        <form role=\\\"form\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser(registerForm)\\\" novalidate autocomplete=\\\"off\\\">\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('firstName').invalid && registerForm.get('firstName').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"firstName\\\" class=\\\"col-sm-2 control-label\\\">First Name <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [formControl]=\\\"firstName\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\" required>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('lastName').invalid && registerForm.get('lastName').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"lastName\\\" class=\\\"col-sm-2 control-label\\\">Last Name <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [formControl]=\\\"lastName\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\" required>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('staffId').invalid && registerForm.get('staffId').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"staffId\\\" class=\\\"col-sm-2 control-label\\\">Staff Id <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [formControl]=\\\"staffId\\\" id=\\\"staffId\\\" placeholder=\\\"Staff Id\\\" required>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('address').invalid && registerForm.get('address').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"address\\\" class=\\\"col-sm-2 control-label\\\">Address <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [formControl]=\\\"address\\\" id=\\\"address\\\" placeholder=\\\"Address\\\" required>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('phone').invalid && registerForm.get('phone').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"phone\\\" class=\\\"col-sm-2 control-label\\\">Phone <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [formControl]=\\\"phone\\\" id=\\\"phone\\\" placeholder=\\\"Phone\\\" required>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('email').invalid && registerForm.get('email').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"phone\\\" class=\\\"col-sm-2 control-label\\\">Email <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [formControl]=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" required>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('username').invalid && registerForm.get('username').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" [formControl]=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\" required>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('password').invalid && registerForm.get('password').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">Password <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-key\\\"></i></div>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n            </div>\\n          </div>\\n\\n          <!--<div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('category').invalid && registerForm.get('category').dirty}\\\">-->\\n            <!--<label style=\\\"color: white\\\" for=\\\"category\\\" class=\\\"col-sm-2 control-label\\\">Category<sup>*</sup></label>-->\\n            <!--<div class=\\\"input-group col-sm-10\\\">-->\\n              <!--<div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-key\\\"></i></div>-->\\n              <!--&lt;!&ndash;<input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"category\\\" id=\\\"category\\\" placeholder=\\\"Category\\\" required>&ndash;&gt;-->\\n\\n              <!--<select type=\\\"text\\\" [formControl]=\\\"category\\\" id=\\\"category\\\" class=\\\"form-control\\\">-->\\n\\n                <!--<option *ngFor=\\\"let cat of Category\\\" >{{cat.category}}</option>-->\\n\\n              <!--</select>-->\\n\\n            <!--</div>-->\\n          <!--</div>-->\\n\\n\\n\\n\\n          <div class=\\\"text-center\\\">\\n            <button style=\\\"margin-left: 3%\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Register {{Category}}</button>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n  <div style=\\\"height:20px\\\">\\n\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/add-user/add-user.component.html\n// module id = ./src/app/components/add-user/add-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {User} from \"../../model/user\";\nimport {Router, Routes} from \"@angular/router\";\nimport { ActivatedRoute} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport { Location } from '@angular/common';\nimport { ValidationService} from \"../../services/validation.service\";\nimport { ToasterServiceService} from \"../../services/toaster-service.service\";\n\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n\n  formTitle: String;\n  user: User;\n  registerForm: FormGroup;\n\n  Category: any;\n\n  username = new FormControl('',[Validators.required]);\n  firstName = new FormControl('',[Validators.required]);\n  lastName = new FormControl('',[Validators.required]);\n  staffId = new FormControl('',[Validators.required]);\n  address = new FormControl('',[Validators.required]);\n  phone = new FormControl('',[Validators.required]);\n  email = new FormControl('',[Validators.required]);\n  password = new FormControl('',[Validators.required]);\n  category = new FormControl('',[Validators.required]);\n\n  constructor(\n\n    private authService: AuthService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private location: Location,\n    private validationService: ValidationService,\n    private toasterService: ToasterServiceService\n  ) { }\n\n  ngOnInit() {\n\n    // this.authService.getCategory().subscribe(response=>{\n    //   this.Category = response.data;\n    //\n    //   console.log(this.Category);\n    // })\n\n    this.Category = this.route.snapshot.params.id;\n\n    this.registerForm = this.formBuilder.group({\n      username: this.username,\n      password: this.password,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      staffId : this.staffId,\n      address: this.address,\n      phone: this.phone,\n      email: this.email,\n      category: this.Category\n    })\n  }\n\n  registerUser(formData: FormGroup){\n\n    this.user = new User();\n    this.user.username = formData.value.username;\n    this.user.password = formData.value.password;\n    this.user.firstName = formData.value.firstName;\n    this.user.lastName = formData.value.lastName;\n    this.user.staffId = formData.value.staffId;\n    this.user.address = formData.value.address;\n    this.user.phone = formData.value.phone;\n    this.user.email = formData.value.email;\n    this.user.category = this.Category;\n\n    if(!this.validationService.validateRegister(this.user)){\n      this.toasterService.Warning(\"Please fill all the fields.\");\n      return false;\n    }\n\n    if(!this.validationService.validateEmail(this.user.email)){\n      this.toasterService.Error(\"Please Enter Valid Email\");\n      return false;\n    }\n\n    this.authService.postUser(this.user).subscribe(res=>{\n      this.toasterService.Success(\"Successfully added \"+ this.Category);\n      this.location.back();\n    })\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/add-user/add-user.component.ts","module.exports = \"table tr:nth-child(even) {\\r\\n  background-color: rgba(205, 195, 207, 0.7);\\r\\n  color: black;\\r\\n}\\r\\ntable tr:nth-child(odd) {\\r\\n  color: black;\\r\\n  background-color: rgba(176, 160, 173, 0.7);\\r\\n}\\r\\n.texto_grande {\\r\\n  font-size: 2rem;\\r\\n  color: white;\\r\\n}\\r\\n#icone_grande {\\r\\n  font-size: 4rem;\\r\\n  color:#fff;\\r\\n}\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/admin-dashboard/admin-dashboard.component.css\n// module id = ./src/app/components/admin-dashboard/admin-dashboard.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"bg\\\">\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\" *ngIf=\\\"adminOrManager=='Admin'\\\"><a href=\\\"#\\\">Admin Home</a></li>\\n        <li><a href=\\\"/manager\\\">Manager</a></li>\\n        <li><a href=\\\"/pharmasist\\\">Pharmasist</a></li>\\n        <li><a href=\\\"/salesman\\\">Salesman</a></li>\\n        <!--<li><a href=\\\"#\\\">Sales Report</a></li>-->\\n      </ul>\\n\\n      <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n        <div class=\\\"input-group\\\">\\n          <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n          <button (click)=\\\"logout()\\\" style=\\\"text-decoration: none\\\" class=\\\"btn btn-warning\\\">Log Out</button>\\n\\n        </div>\\n      </form>\\n\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-shopping-cart\\\" id=\\\"icone_grande\\\"></i><span> <b style=\\\"font-size: 48px; margin-left: 10px\\\"></b></span><br><br>\\n        <span class=\\\"texto_grande\\\"> Total Sales</span></a>\\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fa fa-user\\\" id=\\\"icone_grande\\\"></i> <span> <b style=\\\"font-size: 48px; margin-left: 10px\\\">{{numberOfManager}}</b></span><br><br>\\n        <span class=\\\"texto_grande\\\"> Manager</span></a>\\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users\\\" id=\\\"icone_grande\\\"></i><span> <b style=\\\"font-size: 48px; margin-left: 10px\\\">{{numberOfPharmasist}}</b></span> <br><br>\\n        <span class=\\\"texto_grande\\\"> Pharmasist</span></a>\\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users\\\" id=\\\"icone_grande\\\"></i> <span> <b style=\\\"font-size: 48px; margin-left: 10px\\\">{{numberOfSaleman}}</b></span><br><br>\\n        <span class=\\\"texto_grande\\\"> Salesman</span></a>\\n    </div>\\n  </div>\\n\\n  <br><br>\\n\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"col-md-3 col-sm-3\\\" *ngIf=\\\"adminOrManager=='Admin'\\\">\\n      <a (click)=\\\"managerAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users-cog\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span  class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i>Manager</span></a>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a (click)=\\\"pharmasistAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-user-md\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i>Pharmasist</span></a>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a (click)=\\\"salesManAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-user-tie\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i>Salesman</span></a>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a  class=\\\"btn btn-block btn-lg btn-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-search\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span class=\\\"texto_grande\\\"> Report</span></a>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n  <br><br>\\n\\n  <div  class=\\\"container\\\" style=\\\"background-color: ghostwhite\\\">\\n\\n    <nav class=\\\"navbar\\\" style=\\\"background-color: blue; margin-top: 1%\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'; color: white\\\">Out of Stock Medicines</span></a>\\n        </div>\\n\\n      </div>\\n    </nav>\\n\\n\\n    <div class=\\\"table-responsice\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: azure;color: black\\\">\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Generic</th>\\n          <th>Type</th>\\n          <th>Price</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let medicine of outOfStock; let i = index\\\">\\n\\n          <td>{{i+1}}</td>\\n          <td>{{medicine.name}}</td>\\n          <td>{{medicine.generic}}</td>\\n          <td>{{medicine.type}}</td>\\n          <td>{{medicine.price}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n\\n  <br><br>\\n\\n\\n<div class=\\\"container\\\" style=\\\"background-color: azure\\\">\\n    <nav class=\\\"navbar\\\" style=\\\"background-color: blue;margin-top: 1%\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'; color: white\\\">Medicines</span></a>\\n        </div>\\n\\n        <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n          <div class=\\\"input-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\" (keyup)=\\\"searchTerm$.next($event.target.value)\\\">\\n            <div class=\\\"input-group-btn\\\">\\n              <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                <i class=\\\"glyphicon glyphicon-search\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </nav>\\n\\n\\n  <div *ngIf=\\\"results\\\" class=\\\"table-responsice\\\">\\n    <table  class=\\\"table\\\">\\n      <thead>\\n      <tr style=\\\"background-color: azure;color: black\\\">\\n        <th>#</th>\\n        <th>Name</th>\\n        <th>Generic</th>\\n        <th>Type</th>\\n        <th>Price</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let medicine of results; let i = index\\\">\\n\\n        <td>{{i+1}}</td>\\n        <td>{{medicine.name}}</td>\\n        <td>{{medicine.generic}}</td>\\n        <td>{{medicine.type}}</td>\\n        <td>{{medicine.price}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <div *ngIf=\\\"!results\\\" class=\\\"table-responsice\\\">\\n    <table  class=\\\"table\\\">\\n      <thead>\\n      <tr style=\\\"background-color: azure;color: black\\\">\\n        <th>#</th>\\n        <th>Name</th>\\n        <th>Generic</th>\\n        <th>Type</th>\\n        <th>Price</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let medicine of pagedItems; let i = index\\\">\\n\\n        <td>{{i+1}}</td>\\n        <td>{{medicine.name}}</td>\\n        <td>{{medicine.generic}}</td>\\n        <td>{{medicine.type}}</td>\\n        <td>{{medicine.price}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <!-- items being paged -->\\n  <!--<div *ngFor=\\\"let item of pagedItems\\\">-->\\n  <!--{{item.name}}-->\\n  <!--</div>-->\\n\\n  <div class=\\\"text-center\\\">\\n    <!-- pager -->\\n    <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n        <a (click)=\\\"setPage(1)\\\">First</a>\\n      </li>\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n        <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\n      </li>\\n      <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n        <a (click)=\\\"setPage(page)\\\">{{page}}</a>\\n      </li>\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n        <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\n      </li>\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n        <a (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/admin-dashboard/admin-dashboard.component.html\n// module id = ./src/app/components/admin-dashboard/admin-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MedicineService} from \"../../services/medicine.service\";\nimport { PagerServicesService} from \"../../services/pager-services.service\";\nimport {Router} from \"@angular/router\";\nimport { AuthService} from \"../../services/auth.service\";\nimport { ToasterServiceService} from \"../../services/toaster-service.service\";\nimport {SearchService} from \"../../services/search-service.service\";\nimport {Subject} from \"rxjs/Subject\";\n\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n\n  results: Object;\n  searchTerm$ = new Subject<string>();\n\n  constructor(\n    private medicineService: MedicineService,\n    private pagerService: PagerServicesService,\n    private router: Router,\n    private authService: AuthService,\n    private toasterService: ToasterServiceService,\n    private searchService: SearchService\n\n  ) {\n    this.searchService.search(this.searchTerm$)\n      .subscribe(results => {\n        this.results = results.data;\n      });\n  }\n\n\n private adminOrManager:any;\n\n  // array of all items to be paged\n  private allItems: any[];\n\n  //Manager\n  private numberOfManager: any =0;\n\n  //Pharmasist\n  private numberOfPharmasist: any =0;\n\n  //Salesman\n  private numberOfSaleman: any =0;\n\n  private outOfStock:any = [];\n\n  // pager object\n  pager: any = {};\n\n  // paged items\n  pagedItems: any[];\n\n  ngOnInit() {\n\n    this.adminOrManager  = localStorage.getItem('category');\n\n    console.log(this.adminOrManager);\n\n\n    this.medicineService.getMedicine().subscribe(res=>{\n      // console.log(res.data);\n\n      this.allItems = res.data;;\n\n      for(let i=0; i<this.allItems.length; i++)\n        if(this.allItems[i].quantity<=0)\n          this.outOfStock.push(this.allItems[i]);\n\n      // initialize to page 1\n      this.setPage(1);\n    })\n\n    this.authService.getAllUser().subscribe(res=>{\n\n      //console.log(res.data);\n\n      for(let i=0; i<res.data.length; i++)\n      {\n            if(res.data[i].category=='Manager') {\n              this.numberOfManager++;\n                // console.log(res.data[i].category);\n\n            }\n\n        // console.log(res.data[i].category);\n\n        if(res.data[i].category=='Pharmasist') {\n          this.numberOfPharmasist++;\n          // console.log(res.data[i].category);\n        }\n\n        if(res.data[i].category=='Salesman'){\n          // console.log(i + ' =>'+res.data[i].category);\n          this.numberOfSaleman++;\n        }\n\n\n      }\n\n      // console.log(this.numberOfManager);\n      // console.log(this.numberOfSaleman);\n      // console.log(this.numberOfPharmasist);\n\n    })\n\n\n  }\n\n  setPage(page: number) {\n    // get pager object from service\n    this.pager = this.pagerService.getPager(this.allItems.length, page);\n\n    // get current page of items\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\n  }\n\n  managerAdd()\n  {\n    let id=\"Manager\";\n    this.router.navigate([`/addUser/${id}`]);\n  }\n\n  pharmasistAdd()\n  {\n    let id=\"Pharmasist\";\n    this.router.navigate([`/addUser/${id}`]);\n  }\n\n  salesManAdd()\n  {\n    let id=\"Salesman\";\n    this.router.navigate([`/addUser/${id}`]);\n  }\n\n  logout(){\n    this.authService.logout();\n    this.toasterService.Success(\"Successfully logout\");\n\n    this.router.navigate(['/login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/admin-dashboard/admin-dashboard.component.ts","module.exports = \"/*.example-form {*/\\r\\n  /*min-width: 150px;*/\\r\\n  /*max-width: 500px;*/\\r\\n  /*width: 100%;*/\\r\\n  /*}*/\\r\\n  /*.example-full-width {*/\\r\\n  /*width: 100%;*/\\r\\n  /*}*/\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.css\n// module id = ./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.css\n// module chunks = main","module.exports = \"<input (keyup)=\\\"searchTerm$.next($event.target.value)\\\">\\n\\n<ul *ngIf=\\\"results\\\">\\n  <li *ngFor=\\\"let result of results | slice:0:9\\\">\\n    <a href=\\\"{{ result.latest }}\\\" target=\\\"_blank\\\">\\n      {{ result.name }}\\n    </a>\\n  </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.html\n// module id = ./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport { OnInit} from \"@angular/core\";\nimport { Subject } from 'rxjs/Subject';\n\nimport { MedicineService} from \"../../services/medicine.service\";\nimport {SearchService} from \"../../services/search-service.service\";\n@Component({\n  selector: 'app-autocomplete-optgroup-example',\n  templateUrl: './autocomplete-optgroup-example.component.html',\n  styleUrls: ['./autocomplete-optgroup-example.component.css']\n})\nexport class AutocompleteOptgroupExampleComponent implements OnInit{\n\n\n  ngOnInit(){\n    this.medicineService.getMedicine().subscribe(res=>{\n\n    })\n  }\n\n\n\n  results: Object;\n  searchTerm$ = new Subject<string>();\n\n  constructor(\n    private searchService: SearchService,\n    private medicineService: MedicineService\n  ) {\n\n    this.searchService.search(this.searchTerm$)\n      .subscribe(results => {\n        this.results = results.data;\n      });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/autocomplete-optgroup-example/autocomplete-optgroup-example.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = ./src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<p>\\n  home works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = ./src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { PagerServicesService} from \"../../services/pager-services.service\";\nimport { Medicine} from \"../../model/medicine\";\nimport { Cart} from \"../../model/cart\";\nimport { Router, NavigationExtras} from \"@angular/router\";\nimport { Subject } from 'rxjs/Subject';\n\nimport { MedicineService} from \"../../services/medicine.service\";\nimport {SearchService} from \"../../services/search-service.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  results: Object;\n  searchTerm$ = new Subject<string>();\n\n  constructor(\n    private medicineService: MedicineService,\n    private pagerService: PagerServicesService,\n    private router: Router,\n    private searchService: SearchService\n  ) {\n    this.searchService.search(this.searchTerm$)\n      .subscribe(results => {\n        this.results = results.data;\n      });\n  }\n\n  medicines: Array<Cart> = new Array<Cart>();\n\n  medicine = new Cart();\n\n  sum:number = 0;\n  // array of all items to be paged\n  private allItems: any[];\n\n  // pager object\n  pager: any = {};\n\n  // paged items\n  pagedItems: any[];\n\n  private customerName;\n  private customerNumber;\n\n  ngOnInit() {\n\n\n    this.medicineService.getMedicine().subscribe(res=>{\n\n\n      this.allItems = res.data;;\n\n      // initialize to page 1\n      this.setPage(1);\n\n    })\n\n    if(localStorage.getItem('cart'))\n      this.medicines = JSON.parse(localStorage.getItem('cart'));\n    this.sum = 0;\n\n    if(this.medicines)\n      for (let i = 0; i < this.medicines.length; i++)\n      {\n        this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      }\n  }\n\n\n  setPage(page: number) {\n    // get pager object from service\n    this.pager = this.pagerService.getPager(this.allItems.length, page);\n\n    // get current page of items\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\n  }\n\n  addToCart(medicine){\n\n\n    this.medicine  = new Cart();\n\n    var found = this.medicines.find(function(element) {\n      return element.name == medicine.name;\n    });\n    //\n    // console.log('Found');\n    // console.log(found);\n\n    if(found) {\n      if (found.name == medicine.name) {\n        for (let i = 0; i < this.medicines.length; i++)\n          if (this.medicines[i].name == medicine.name) {\n            this.medicines[i].quantity = this.medicines[i].quantity + 1;\n            this.allItems[i].quantity--;\n\n            console.log('Quantity: '+this.allItems[i].quantity);\n\n            // this.sum += this.medicines[i].quantity* this.medicines[i].price;\n            // console.log(this.medicines[i].quantity)\n          }\n      }\n    }\n    else {\n      this.medicine._id = medicine._id;\n      this.medicine.name = medicine.name;\n      this.medicine.price = medicine.price;\n      this.medicine.quantity = 1;\n\n      for (let i=0; i<this.allItems.length;i++)\n      {\n        if(this.medicine.name == this.allItems[i].name)\n          this.allItems[i].quantity--;\n      }\n\n      // this.sum += this.medicine.quantity* this.medicine.price;\n\n      this.medicines.push(this.medicine);\n\n    }\n\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n\n    // console.log(this.medicines);\n\n\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n\n\n  }\n\n  removeFromCart(cnt,medicine){\n    for (let i = 0; i < this.medicines.length; i++)\n      if (this.medicines[i].name == medicine.name) {\n\n        this.medicines[i].quantity--;\n        if(this.medicines[i].quantity<=0)\n          this.medicines.splice(i,1);\n        // console.log(this.medicines[i].quantity)\n      }\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n  }\n\n  removeAllFromCart(medicine){\n    for (let i = 0; i < this.medicines.length; i++)\n      if (this.medicines[i].name == medicine.name) {\n\n        this.medicines.splice(i,1);\n        // console.log(this.medicines[i].quantity)\n      }\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n  }\n\n  updateTheMedicine(medicine){\n    console.log(medicine._id);\n\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n        \"_id\": medicine._id,\n        \"quantity\": medicine.quantity\n      }\n    };\n\n\n\n    for (let i = 0; i < this.medicines.length; i++)\n      if (this.medicines[i].name == medicine.name) {\n\n        this.medicines[i].quantity = 0;\n        if(this.medicines[i].quantity<=0)\n          this.medicines.splice(i,1);\n        // console.log(this.medicines[i].quantity)\n      }\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n    this.router.navigate(['update-medicine'], navigationExtras);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","module.exports = \"\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.css\n// module id = ./src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div  class=\\\"bg\\\">\\n  <div class=\\\"container\\\">\\n\\n    <h1 style=\\\"margin-top: 5%;text-align: center; font-family: 'Times New Roman'; color: azure\\\">Pharmacy Management System</h1>\\n\\n    <h3 style=\\\"text-align: center; margin-top: 5%;font-family: Verdana; color: azure\\\"> PMS LOGIN</h3>\\n    <div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\n      <div style=\\\"margin-left: 15%\\\" class=\\\"col-xs-8 col-sm-8 col-md-8 \\\">\\n        <form role=\\\"form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"getUser(loginForm)\\\" novalidate autocomplete=\\\"off\\\">\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': loginForm.get('username').invalid && loginForm.get('username').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-user-md\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\" required>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': loginForm.get('password').invalid && loginForm.get('password').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">Password <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-key\\\"></i></div>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n            </div>\\n          </div>\\n\\n\\n\\n\\n          <div class=\\\"text-center\\\">\\n            <button style=\\\"margin-left: 3%\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign In</button>\\n          </div>\\n\\n\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n\\n\\n  </div>\\n\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = ./src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport { User} from \"../../model/user\";\nimport { ToasterServiceService} from \"../../services/toaster-service.service\";\nimport {isSuccess} from \"@angular/http/src/http_utils\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  formTitle: String;\n  user: User;\n  loginForm: FormGroup;\n\n\n  username = new FormControl('',[Validators.required]);\n  password = new FormControl('',[Validators.required]);\n\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private toasterServie: ToasterServiceService\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: this.username,\n      password: this.password\n    })\n  }\n\n  getUser(formData: FormGroup){\n\n    this.user = new User();\n\n    this.user.username = formData.value.username;\n    this.user.password = formData.value.password;\n\n\n    this.authService.getUser(this.user).subscribe(response=>{\n\n      console.log(response);\n\n      if(!response.success){\n        this.toasterServie.Warning(response.message);\n      }else{\n\n        this.toasterServie.Success(\"Successfully logged in as \" + response.data.category);\n\n        this.authService.storeUserData(response.token,response.data);\n\n        localStorage.setItem('category',response.data.category);\n\n        if(response.data.category==\"Pharmasist\"){\n          this.router.navigate(['/pDashboard']);\n        }\n\n        else if(response.data.category==\"Salesman\")\n          this.router.navigate(['/sDashboard']);\n\n        else if(response.data.category==\"Admin\")\n          this.router.navigate(['/aDashboard']);\n\n        else if(response.data.category==\"Manager\")\n          this.router.navigate(['/mDashboard']);\n      }\n\n    })\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","module.exports = \"table tr:nth-child(even) {\\r\\n  background-color: rgba(205, 195, 207, 0.7);\\r\\n  color: black;\\r\\n}\\r\\ntable tr:nth-child(odd) {\\r\\n  color: black;\\r\\n  background-color: rgba(176, 160, 173, 0.7);\\r\\n}\\r\\n.texto_grande {\\r\\n  font-size: 2rem;\\r\\n  color: white;\\r\\n}\\r\\n#icone_grande {\\r\\n  font-size: 4rem;\\r\\n  color:#fff;\\r\\n}\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/manager-dashboard/manager-dashboard.component.css\n// module id = ./src/app/components/manager-dashboard/manager-dashboard.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"bg\\\">\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\" *ngIf=\\\"adminOrManager=='Admin'\\\"><a href=\\\"#\\\">Admin Home</a></li>\\n        <li class=\\\"active\\\" *ngIf=\\\"adminOrManager=='Manager'\\\"><a href=\\\"/mDashboard\\\">Manger Dashboard</a></li>\\n        <li><a href=\\\"/manager\\\">Manager</a></li>\\n        <li><a href=\\\"/pharmasist\\\">Pharmasist</a></li>\\n\\n        <li><a href=\\\"/salesman\\\">Salesman</a></li>\\n        <!--<li><a href=\\\"#\\\">Sales Report</a></li>-->\\n      </ul>\\n\\n      <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n        <div class=\\\"input-group\\\">\\n          <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n          <!--<button style=\\\"text-decoration: none\\\">Log Out</button>-->\\n\\n          <button (click)=\\\"logout()\\\" style=\\\"text-decoration: none\\\" class=\\\"btn btn-warning\\\">Log Out</button>\\n\\n        </div>\\n      </form>\\n\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-shopping-cart\\\" id=\\\"icone_grande\\\"></i><span> <b style=\\\"font-size: 48px; margin-left: 10px\\\"></b></span><br><br>\\n        <span class=\\\"texto_grande\\\"> Total Sales</span></a>\\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fa fa-user\\\" id=\\\"icone_grande\\\"></i> <span> <b style=\\\"font-size: 48px; margin-left: 10px\\\">{{numberOfManager}}</b></span><br><br>\\n        <span class=\\\"texto_grande\\\"> Manager</span></a>\\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users\\\" id=\\\"icone_grande\\\"></i><span> <b style=\\\"font-size: 48px; margin-left: 10px\\\">{{numberOfPharmasist}}</b></span> <br><br>\\n        <span class=\\\"texto_grande\\\"> Pharmasist</span></a>\\n    </div>\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a class=\\\"btn btn-block btn-lg btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users\\\" id=\\\"icone_grande\\\"></i> <span> <b style=\\\"font-size: 48px; margin-left: 10px\\\">{{numberOfSaleman}}</b></span><br><br>\\n        <span class=\\\"texto_grande\\\"> Salesman</span></a>\\n    </div>\\n  </div>\\n\\n  <br><br>\\n\\n  <div class=\\\"container\\\" >\\n    <div class=\\\"col-md-3 col-sm-3\\\" *ngIf=\\\"adminOrManager=='Admin'\\\">\\n      <a (click)=\\\"managerAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users-cog\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span  class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i>Manager</span></a>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a (click)=\\\"pharmasistAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-user-md\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i>Pharmasist</span></a>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a (click)=\\\"salesManAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-user-tie\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i>Salesman</span></a>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-sm-3\\\">\\n      <a  class=\\\"btn btn-block btn-lg btn-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-search\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span class=\\\"texto_grande\\\"> Report</span></a>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n  <br><br>\\n\\n  <div  class=\\\"container\\\" style=\\\"background-color: ghostwhite\\\">\\n\\n    <nav class=\\\"navbar\\\" style=\\\"background-color: blue; margin-top: 1%\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'; color: white\\\">Out of Stock Medicines</span></a>\\n        </div>\\n\\n      </div>\\n    </nav>\\n\\n\\n    <div class=\\\"table-responsice\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: azure;color: black\\\">\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Generic</th>\\n          <th>Type</th>\\n          <th>Price</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let medicine of outOfStock; let i = index\\\">\\n\\n          <td>{{i+1}}</td>\\n          <td>{{medicine.name}}</td>\\n          <td>{{medicine.generic}}</td>\\n          <td>{{medicine.type}}</td>\\n          <td>{{medicine.price}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n\\n  <br><br>\\n\\n\\n  <div class=\\\"container\\\" style=\\\"background-color: azure\\\">\\n    <nav class=\\\"navbar\\\" style=\\\"background-color: blue;margin-top: 1%\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'; color: white\\\">Medicines</span></a>\\n        </div>\\n\\n        <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n          <div class=\\\"input-group\\\">\\n            <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\" (keyup)=\\\"searchTerm$.next($event.target.value)\\\">\\n\\n            <div class=\\\"input-group-btn\\\">\\n              <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                <i class=\\\"glyphicon glyphicon-search\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </nav>\\n\\n\\n    <div *ngIf=\\\"results\\\" class=\\\"table-responsice\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: azure;color: black\\\">\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Generic</th>\\n          <th>Type</th>\\n          <th>Price</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let medicine of results; let i = index\\\">\\n\\n          <td>{{i+1}}</td>\\n          <td>{{medicine.name}}</td>\\n          <td>{{medicine.generic}}</td>\\n          <td>{{medicine.type}}</td>\\n          <td>{{medicine.price}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"!results\\\" class=\\\"table-responsice\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: azure;color: black\\\">\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Generic</th>\\n          <th>Type</th>\\n          <th>Price</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let medicine of pagedItems; let i = index\\\">\\n\\n          <td>{{i+1}}</td>\\n          <td>{{medicine.name}}</td>\\n          <td>{{medicine.generic}}</td>\\n          <td>{{medicine.type}}</td>\\n          <td>{{medicine.price}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <!-- items being paged -->\\n    <!--<div *ngFor=\\\"let item of pagedItems\\\">-->\\n    <!--{{item.name}}-->\\n    <!--</div>-->\\n\\n    <div class=\\\"text-center\\\">\\n      <!-- pager -->\\n      <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(1)\\\">First</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\n        </li>\\n        <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n          <a (click)=\\\"setPage(page)\\\">{{page}}</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\n        </li>\\n      </ul>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/manager-dashboard/manager-dashboard.component.html\n// module id = ./src/app/components/manager-dashboard/manager-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MedicineService} from \"../../services/medicine.service\";\nimport { PagerServicesService} from \"../../services/pager-services.service\";\nimport {Router} from \"@angular/router\";\nimport { AuthService} from \"../../services/auth.service\";\nimport {ToasterServiceService} from \"../../services/toaster-service.service\";\nimport {SearchService} from \"../../services/search-service.service\";\nimport {Subject} from \"rxjs/Subject\";\n\n\n\n@Component({\n  selector: 'app-manager-dashboard',\n  templateUrl: './manager-dashboard.component.html',\n  styleUrls: ['./manager-dashboard.component.css']\n})\nexport class ManagerDashboardComponent implements OnInit {\n\n\n  results: Object;\n  searchTerm$ = new Subject<string>();\n\n  constructor(\n    private medicineService: MedicineService,\n    private pagerService: PagerServicesService,\n    private router: Router,\n    private authService: AuthService,\n    private toasterService: ToasterServiceService,\n    private searchService: SearchService\n\n  ) {\n\n    this.searchService.search(this.searchTerm$)\n      .subscribe(results => {\n        this.results = results.data;\n      });\n  }\n      private adminOrManager:any;\n\n      // array of all items to be paged\n      private allItems: any[];\n\n      //Manager\n      private numberOfManager: any =0;\n\n      //Pharmasist\n      private numberOfPharmasist: any =0;\n\n      //Salesman\n      private numberOfSaleman: any =0;\n\n      private outOfStock:any = [];\n\n      // pager object\n      pager: any = {};\n\n      // paged items\n      pagedItems: any[];\n\n      ngOnInit() {\n\n        this.adminOrManager  = localStorage.getItem('category');\n\n        console.log(this.adminOrManager);\n\n\n        this.medicineService.getMedicine().subscribe(res=>{\n          // console.log(res.data);\n\n          this.allItems = res.data;;\n\n          for(let i=0; i<this.allItems.length; i++)\n            if(this.allItems[i].quantity==0)\n              this.outOfStock.push(this.allItems[i]);\n\n          // initialize to page 1\n          this.setPage(1);\n        })\n\n        this.authService.getAllUser().subscribe(res=>{\n\n          //console.log(res.data);\n\n          for(let i=0; i<res.data.length; i++)\n          {\n            if(res.data[i].category=='Manager') {\n              this.numberOfManager++;\n              // console.log(res.data[i].category);\n\n            }\n\n            // console.log(res.data[i].category);\n\n            if(res.data[i].category=='Pharmasist') {\n              this.numberOfPharmasist++;\n              // console.log(res.data[i].category);\n            }\n\n            if(res.data[i].category=='Salesman'){\n              // console.log(i + ' =>'+res.data[i].category);\n              this.numberOfSaleman++;\n            }\n\n\n          }\n\n          // console.log(this.numberOfManager);\n          // console.log(this.numberOfSaleman);\n          // console.log(this.numberOfPharmasist);\n\n        })\n\n\n      }\n\n      setPage(page: number) {\n        // get pager object from service\n        this.pager = this.pagerService.getPager(this.allItems.length, page);\n\n        // get current page of items\n        this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\n      }\n\n\n      pharmasistAdd()\n      {\n        let id=\"Pharmasist\";\n        this.router.navigate([`/addUser/${id}`]);\n      }\n\n      salesManAdd()\n      {\n        let id=\"Salesman\";\n        this.router.navigate([`/addUser/${id}`]);\n      }\n\n  logout(){\n    this.authService.logout();\n    this.toasterService.Success('Successfully logout!');\n    this.router.navigate(['/login']);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/manager-dashboard/manager-dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/manager/manager.component.css\n// module id = ./src/app/components/manager/manager.component.css\n// module chunks = main","module.exports = \"<div>\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li *ngIf=\\\"adminOrManager == 'Admin'\\\"><a href=\\\"/aDashboard\\\">Admin Home</a></li>\\n        <li *ngIf=\\\"adminOrManager == 'Manager'\\\"><a href=\\\"/mDashboard\\\">Manger Dashboard</a></li>\\n\\n        <li class=\\\"active\\\"><a href=\\\"#\\\">Manager</a></li>\\n        <li><a href=\\\"/pharmasist\\\">Pharmasist</a></li>\\n        <li><a href=\\\"/salesman\\\">Salesman</a></li>\\n        <!--<li><a href=\\\"#\\\">Sales Report</a></li>-->\\n      </ul>\\n\\n      <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n        <div class=\\\"input-group\\\">\\n          <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n          <!--<button style=\\\"text-decoration: none\\\">Log Out</button>-->\\n\\n          <button (click)=\\\"logout()\\\" style=\\\"text-decoration: none\\\" class=\\\"btn btn-warning\\\">Log Out</button>\\n\\n        </div>\\n      </form>\\n\\n    </div>\\n  </nav>\\n\\n  <div  class=\\\"container\\\" >\\n\\n    <div  class=\\\"col-md-3 pull-right\\\">\\n      <button [attr.disabled]=\\\"buttonDisabled? '' : null\\\" (click)=\\\"managerAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users-cog\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span  class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Add Manager</span></button>\\n    </div>\\n\\n    <h3 style=\\\"font-family: 'Times New Roman'; color: white\\\">List of Manager</h3>\\n\\n\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n\\n\\n    <br>\\n\\n    <div class=\\\"table-responsice\\\" style=\\\"color: white\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: azure;color: black\\\">\\n\\n          <th>First Name</th>\\n          <th>Last Name</th>\\n          <th>Username</th>\\n          <th>Update</th>\\n          <th>Delete</th>\\n        </tr>\\n        </thead>\\n        <tbody *ngFor=\\\"let manger of manager; let i = index\\\">\\n        <tr *ngIf=\\\"manger.firstName\\\">\\n          <td>{{manger.firstName}}</td>\\n          <td>{{manger.lastName}}</td>\\n          <td>{{manger.username}}</td>\\n          <td>\\n            <a (click)=\\\"updateManager(manger._id)\\\" class=\\\"btn  btn-sm btn-warning\\\">\\n              <i class=\\\"fas fa-wrench\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n          <td>\\n            <a (click)=\\\"salesManAdd()\\\" class=\\\"btn  btn-sm btn-danger\\\">\\n              <i class=\\\"fas fa-trash\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/manager/manager.component.html\n// module id = ./src/app/components/manager/manager.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../../model/user\";\nimport { ToasterServiceService} from \"../../services/toaster-service.service\";\nimport { ReactiveFormsModule} from \"@angular/forms\";\nimport { FormsModule} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.css']\n})\nexport class ManagerComponent implements OnInit {\n\n  constructor(\n    private authServiec: AuthService,\n    private router: Router,\n    private toasterService: ToasterServiceService\n  ) {\n  }\n\n  adminOrManager : any;\n\n  manager = [new User()];\n\n  buttonDisabled: boolean = true;\n\n  ngOnInit() {\n\n    this.adminOrManager = localStorage.getItem('category');\n\n\n    if(this.adminOrManager=='Admin')\n      this.buttonDisabled = false;\n\n    this.authServiec.getAllUser().subscribe( res=>{\n      for(let i=0; i<res.data.length; i++)\n      {\n        if(res.data[i].category==='Manager' && res.data[i].firstName) {\n          this.manager.push(res.data[i]);\n          console.log(this.manager);\n        }\n\n      }\n\n\n\n    })\n  }\n\n  adminHome(){\n    this.router.navigate(['/aDashboard']);\n  }\n\n  managerAdd()\n  {\n    let id=\"Manager\";\n    this.router.navigate([`/addUser/${id}`]);\n  }\n\n  updateManager(id){\n    this.router.navigate([`/update-manager/${id}`])\n  }\n\n  logout(){\n    this.authServiec.logout();\n    this.toasterService.Success('Successfully logout!');\n    this.router.navigate(['/login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/manager/manager.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/medicine/medicine.component.css\n// module id = ./src/app/components/medicine/medicine.component.css\n// module chunks = main","module.exports = \"<div  class=\\\"bg\\\">\\n\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <!--<li><a href=\\\"/aDashboard\\\">Admin Home</a></li>-->\\n        <li><a href=\\\"/pDashboard\\\">Pharmasist</a></li>\\n        <li class=\\\"active\\\"><a href=\\\"/medicine\\\">Medicine</a></li>\\n        <!--<li ><a href=\\\"/manager\\\">Manager</a></li>-->\\n        <!--<li><a href=\\\"/salesman\\\">Salesman</a></li>-->\\n        <!--<li><a href=\\\"#\\\">Sales Report</a></li>-->\\n      </ul>\\n\\n      <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n        <div class=\\\"input-group\\\">\\n          <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n          <button style=\\\"text-decoration: none\\\">Log Out</button>\\n\\n        </div>\\n      </form>\\n\\n    </div>\\n  </nav>\\n\\n<div class=\\\"container\\\">\\n\\n\\n  <div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\n    <div style=\\\"margin-left: 15%\\\" class=\\\"col-xs-8 col-sm-8 col-md-8 \\\">\\n      <form role=\\\"form\\\" [formGroup]=\\\"medicineForm\\\" (ngSubmit)=\\\"createMedicine(medicineForm)\\\" novalidate autocomplete=\\\"off\\\">\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': medicineForm.get('name').invalid && medicineForm.get('name').dirty}\\\">\\n          <label style=\\\"color: white\\\" for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Name <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" required>\\n          </div>\\n        </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': medicineForm.get('generic').invalid && medicineForm.get('generic').dirty}\\\">\\n            <label style=\\\"color: white\\\" for=\\\"generic\\\" class=\\\"col-sm-2 control-label\\\">Generic <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"generic\\\" id=\\\"generic\\\" placeholder=\\\"Generic\\\" required>\\n            </div>\\n          </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': medicineForm.get('type').invalid && medicineForm.get('type').dirty}\\\">\\n          <label style=\\\"color: white\\\" for=\\\"type\\\" class=\\\"col-sm-2 control-label\\\">Type <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"type\\\" id=\\\"type\\\" placeholder=\\\"Type\\\" required>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': medicineForm.get('company').invalid && medicineForm.get('company').dirty}\\\">\\n          <label style=\\\"color: white\\\" for=\\\"company\\\" class=\\\"col-sm-2 control-label\\\">Company <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"company\\\" id=\\\"company\\\" placeholder=\\\"Company\\\" required>\\n          </div>\\n        </div>\\n\\n\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': medicineForm.get('price').invalid && medicineForm.get('price').dirty}\\\">\\n              <label style=\\\"color: white\\\" for=\\\"price\\\" class=\\\"col-sm-2 control-label\\\">Price <sup>*</sup></label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"fas fa-dollar-sign\\\"></i></div>\\n\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"price\\\" id=\\\"price\\\" placeholder=\\\"Price\\\" required>\\n              </div>\\n            </div>\\n\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': medicineForm.get('quantity').invalid && medicineForm.get('quantity').dirty}\\\">\\n                <label style=\\\"color: white\\\" for=\\\"quantity\\\" class=\\\"col-sm-2 control-label\\\">Quantity <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"fab fa-quora\\\"></i></div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"quantity\\\" id=\\\"quantity\\\" placeholder=\\\"Quantity\\\" required>\\n                </div>\\n\\n          </div>\\n\\n\\n          <div class=\\\"text-center\\\">\\n            <button style=\\\"margin-left: 3%\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Medicine</button>\\n          </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\\n  <div style=\\\"height:240px\\\">\\n\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/medicine/medicine.component.html\n// module id = ./src/app/components/medicine/medicine.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder} from \"@angular/forms\";\nimport { Medicine} from \"../../model/medicine\";\nimport { MedicineService} from \"../../services/medicine.service\";\nimport {Router} from \"@angular/router\";\nimport { ToasterServiceService} from \"../../services/toaster-service.service\";\nimport { ValidationService} from \"../../services/validation.service\";\nimport { Location} from \"@angular/common\";\n\n@Component({\n  selector: 'app-medicine',\n  templateUrl: './medicine.component.html',\n  styleUrls: ['./medicine.component.css']\n})\nexport class MedicineComponent implements OnInit {\n\n  formTitle: String;\n  medicine: Medicine;\n  medicineForm: FormGroup;\n\n  name = new FormControl('',[Validators.required]);\n  generic = new FormControl('',[Validators.required]);\n  type = new FormControl('',[Validators.required]);\n  company = new FormControl('',[Validators.required]);\n  price = new FormControl('',[Validators.required]);\n  quantity = new FormControl('',[Validators.required]);\n\n\n\n\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private medicineService: MedicineService,\n    private router: Router,\n    private validationService: ValidationService,\n    private toasterService: ToasterServiceService,\n    private location: Location\n  ) {\n    this.formTitle = 'Medicine is Here';\n  }\n\n  ngOnInit() {\n    this.medicineForm = this.formBuilder.group({\n      name: this.name,\n      generic: this.generic,\n      type: this.type,\n      company: this.company,\n      price: this.price,\n      quantity: this.quantity\n    })\n  }\n\n  createMedicine(formData: FormGroup){\n    this.medicine = new Medicine();\n\n    this.medicine.name = formData.value.name;\n    this.medicine.generic = formData.value.generic;\n    this.medicine.type = formData.value.type;\n    this.medicine.company = formData.value.company;\n    this.medicine.price = formData.value.price;\n    this.medicine.quantity = formData.value.quantity;\n\n    console.log(this.medicine);\n\n    if(!this.validationService.validateMedicine(this.medicine)){\n      this.toasterService.Warning(\"Please fill all the fields!\");\n      return false;\n    }\n\n    this.medicineService.createMedicine(this.medicine)\n      .subscribe( resopnse=>{\n        this.toasterService.Success(\"successfully Added Medicine!\");\n        this.location.back();\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/medicine/medicine.component.ts","module.exports = \"table tr:nth-child(even) {\\r\\n  background-color: rgba(25, 207, 193, 0.7);\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ntable tr:nth-child(odd) {\\r\\n  color: white;\\r\\n  background-color: rgba(145, 142, 176, 0.7);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.css\n// module id = ./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"bg\\\">\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\"><a href=\\\"#\\\">Home</a></li>\\n        <li><a href=\\\"/medicine\\\">Medicine</a></li>\\n\\n      </ul>\\n      <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">\\n          <div  class=\\\"input-group-btn\\\">\\n            <button style=\\\"margin-right: 10px\\\" class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n              <i class=\\\"glyphicon glyphicon-search\\\"></i>\\n            </button>\\n            <button  (click)=\\\"logout()\\\" style=\\\"text-decoration: none\\\" class=\\\"btn btn-warning\\\">Log Out</button>\\n\\n          </div>\\n\\n\\n\\n        </div>\\n      </form>\\n    </div>\\n  </nav>\\n\\n  <div  class=\\\"container\\\">\\n\\n    <div class=\\\"col-md-3 pull-right\\\">\\n      <a (click)=\\\"medicineAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users-cog\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span  class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Add Medicine</span></a>\\n    </div>\\n\\n\\n  </div>\\n\\n\\n  <div  class=\\\"container\\\">\\n\\n\\n    <br>\\n\\n    <!--<h1>Angular 2 - Pagination Example with logic like Google</h1>-->\\n\\n    <div class=\\\"table-responsice\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: blue; color: white\\\">\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Generic</th>\\n          <th>Type</th>\\n          <th>Quantity</th>\\n          <th>Edit</th>\\n          <th>Delete</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let medicine of pagedItems; let i = index\\\">\\n\\n          <td>{{i+1}}</td>\\n          <td>{{medicine.name}}</td>\\n          <td>{{medicine.generic}}</td>\\n          <td>{{medicine.type}}</td>\\n          <td>{{medicine.quantity}}</td>\\n          <td>\\n            <a (click)=\\\"updateMedicine(medicine._id)\\\" class=\\\"btn  btn-sm btn-warning\\\">\\n              <i class=\\\"fas fa-wrench\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n          <td>\\n            <a (click)=\\\"salesManAdd()\\\" class=\\\"btn  btn-sm btn-danger\\\">\\n              <i class=\\\"fas fa-trash\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <!-- items being paged -->\\n    <!--<div *ngFor=\\\"let item of pagedItems\\\">-->\\n    <!--{{item.name}}-->\\n    <!--</div>-->\\n\\n    <div class=\\\"text-center\\\">\\n      <!-- pager -->\\n      <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(1)\\\">First</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\n        </li>\\n        <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n          <a (click)=\\\"setPage(page)\\\">{{page}}</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.html\n// module id = ./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response} from \"@angular/http\";\nimport 'rxjs/add/operator/map';\n\nimport { PagerServicesService} from \"../../services/pager-services.service\";\nimport { MedicineService} from \"../../services/medicine.service\";\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {ToasterServiceService} from \"../../services/toaster-service.service\";\n\n@Component({\n  selector: 'app-pharmasist-dashboard',\n  templateUrl: './pharmasist-dashboard.component.html',\n  styleUrls: ['./pharmasist-dashboard.component.css']\n})\nexport class PharmasistDashboardComponent implements OnInit {\n\n  constructor(\n    private http: Http,\n    private pagerService: PagerServicesService,\n    private medicineService: MedicineService,\n    private router: Router,\n    private authService: AuthService,\n    private toasterService: ToasterServiceService\n  ) { }\n\n  // array of all items to be paged\n  private allItems: any[];\n\n  // pager object\n  pager: any = {};\n\n  // paged items\n  pagedItems: any[];\n\n  ngOnInit() {\n\n    this.medicineService.getMedicine().subscribe(res=>{\n      // console.log(res.data);\n\n      this.allItems = res.data;;\n\n      // initialize to page 1\n      this.setPage(1);\n    })\n\n  }\n\n  setPage(page: number) {\n    // get pager object from service\n    this.pager = this.pagerService.getPager(this.allItems.length, page);\n\n    // get current page of items\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\n  }\n\n  updateMedicine(id){\n    this.router.navigate([`update-medicine/${id}`])\n  }\n\n  medicineAdd(){\n    this.router.navigate(['/medicine']);\n  }\n\n  logout(){\n    this.authService.logout();\n    this.toasterService.Success('Successfully logout!');\n    this.router.navigate(['/login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/pharmasist-dashboard/pharmasist-dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/pharmasist/pharmasist.component.css\n// module id = ./src/app/components/pharmasist/pharmasist.component.css\n// module chunks = main","module.exports = \"<div>\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li *ngIf=\\\"adminOrManager=='Admin'\\\"><a href=\\\"/aDashboard\\\">Admin Home</a></li>\\n        <li *ngIf=\\\"adminOrManager=='Manager'\\\"><a href=\\\"/mDashboard\\\">Manger Dashboard</a></li>\\n        <li *ngIf=\\\"adminOrManager=='Admin' || adminOrManager=='Manager'\\\"><a href=\\\"/manager\\\">Manager</a></li>\\n        <li class=\\\"active\\\"><a href=\\\"/pharmasist\\\">Pharmasist</a></li>\\n        <li><a href=\\\"/salesman\\\">Salesman</a></li>\\n        <!--<li><a href=\\\"#\\\">Sales Report</a></li>-->\\n      </ul>\\n\\n      <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n        <div class=\\\"input-group\\\">\\n          <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n          <!--<button style=\\\"text-decoration: none\\\">Log Out</button>-->\\n\\n          <button (click)=\\\"logout()\\\" style=\\\"text-decoration: none\\\" class=\\\"btn btn-warning\\\">Log Out</button>\\n\\n        </div>\\n      </form>\\n\\n    </div>\\n  </nav>\\n\\n  <div  class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"adminOrManager=='Admin' || adminOrManager=='Manager'\\\" class=\\\"col-md-3 pull-right\\\">\\n      <a (click)=\\\"managerAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users-cog\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span  class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Add {{category}} </span></a>\\n    </div>\\n\\n    <h3 style=\\\"font-family: 'Times New Roman'; color: white\\\">List of {{category}}</h3>\\n    <br>\\n\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n\\n    <br>\\n\\n    <div class=\\\"table-responsice\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: azure;color: black\\\">\\n\\n          <th>First Name</th>\\n          <th>Last Name</th>\\n          <th>Username</th>\\n          <th>Update</th>\\n          <th>Delete</th>\\n        </tr>\\n        </thead>\\n        <tbody *ngFor=\\\"let manger of manager; let i = index\\\">\\n        <tr *ngIf=\\\"manger.firstName\\\" style=\\\"color: white\\\">\\n          <td>{{manger.firstName}}</td>\\n          <td>{{manger.lastName}}</td>\\n          <td>{{manger.username}}</td>\\n          <td>\\n            <a (click)=\\\"updateManager(manger._id)\\\" class=\\\"btn  btn-sm btn-warning\\\">\\n              <i class=\\\"fas fa-wrench\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n          <td>\\n            <a (click)=\\\"salesManAdd()\\\" class=\\\"btn  btn-sm btn-danger\\\">\\n              <i class=\\\"fas fa-trash\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/pharmasist/pharmasist.component.html\n// module id = ./src/app/components/pharmasist/pharmasist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../../model/user\";\nimport {ToasterServiceService} from \"../../services/toaster-service.service\";\n\n@Component({\n  selector: 'app-pharmasist',\n  templateUrl: './pharmasist.component.html',\n  styleUrls: ['./pharmasist.component.css']\n})\nexport class PharmasistComponent implements OnInit {\n\n  constructor(\n\n    private authServiec: AuthService,\n    private router: Router,\n    private toasterService: ToasterServiceService\n  ) { }\n\n\n  manager = [new User()];\n\n\n\n  private category:any;\n  private adminOrManager:any;\n\n  ngOnInit() {\n\n    this.adminOrManager = localStorage.getItem('category');\n\n    this.authServiec.getAllUser().subscribe( res=>{\n      for(let i=0; i<res.data.length; i++)\n      {\n        if(res.data[i].category==='Pharmasist' && res.data[i].firstName) {\n          this.manager.push(res.data[i]);\n          this.category = res.data[i].category;\n          console.log(this.manager);\n        }\n\n      }\n\n\n\n    })\n  }\n\n  adminHome(){\n    this.router.navigate(['/aDashboard']);\n  }\n\n  managerAdd()\n  {\n    let id= this.manager[1].category;\n    this.router.navigate([`/addUser/${id}`]);\n  }\n\n  updateManager(id){\n    this.router.navigate([`/update-manager/${id}`])\n  }\n\n  logout(){\n    this.authServiec.logout();\n    this.toasterService.Success('Successfully logout!');\n    this.router.navigate(['/login']);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/pharmasist/pharmasist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/salesman-dashboard/salesman-dashboard.component.css\n// module id = ./src/app/components/salesman-dashboard/salesman-dashboard.component.css\n// module chunks = main","module.exports = \"\\n<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <!--<li ><a href=\\\"#\\\">Home</a></li>-->\\n      <li class=\\\"active\\\"><a href=\\\"/sDashboard\\\">Salesman</a></li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"container\\\" style=\\\"background-color: white\\\" >\\n\\n  <h3 style=\\\"text-align: center\\\">Item Buy List</h3>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table\\\">\\n\\n      <thead>\\n      <tr style=\\\"background-color: blue; color: white\\\" >\\n        <th>#</th>\\n        <th>Name</th>\\n        <th>Quantity</th>\\n        <th>Price</th>\\n        <th>Add/Remove/Remove All</th>\\n      </tr>\\n      </thead>\\n\\n      <tbody *ngFor=\\\"let medicine of medicines; let i = index\\\">\\n\\n      <tr *ngIf=\\\"medicine.name\\\">\\n\\n        <td>{{i+1}}</td>\\n        <td>{{medicine.name}}</td>\\n        <td>{{medicine.quantity}}</td>\\n        <td>{{medicine.price*medicine.quantity}}</td>\\n        <!--<td><i style=\\\"font-size: 16px\\\" class=\\\"fas fa-plus-square\\\"></i></td>-->\\n        <td>\\n          <a (click)=\\\"addToCart(medicine)\\\" class=\\\"btn  btn-sm btn-success\\\">\\n            <i style=\\\"font-size: 18px\\\" class=\\\"fas fa-plus-circle\\\"></i></a>\\n\\n          <a (click)=\\\"removeFromCart(1 , medicine)\\\" class=\\\"btn  btn-sm btn-warning\\\">\\n            <i style=\\\"font-size: 18px\\\" class=\\\"fas fa-minus-circle\\\"></i></a>\\n\\n\\n          <a (click)=\\\"removeAllFromCart(medicine)\\\" class=\\\"btn  btn-sm btn-danger\\\">\\n            <i style=\\\"font-size: 18px\\\" class=\\\"fas fa-times-circle\\\"></i></a>\\n          <button (click)=\\\"updateTheMedicine(medicine)\\\"  type=\\\"button\\\" class=\\\"btn btn-info\\\">Update</button>\\n        </td>\\n\\n\\n\\n      </tr>\\n      </tbody>\\n      <tr>\\n        <td><b style=\\\"font-size: 14px\\\">Total</b></td>\\n        <td></td>\\n        <td></td>\\n        <td><b style=\\\"font-size: 14px\\\">${{sum}}</b></td>\\n      </tr>\\n    </table>\\n\\n    <label for=\\\"name\\\" class=\\\"pull-left\\\">Customer Name:</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"customerName\\\" placeholder=\\\"Customer Name\\\" id=\\\"name\\\" class=\\\"pull-left\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"customerNumber\\\" placeholder=\\\"Mobile Number\\\" class=\\\"pull-right\\\">\\n    <label class=\\\"pull-right\\\">Mobile Number:</label>\\n\\n\\n  </div>\\n  <br>\\n  <div style=\\\"margin-left: 10%\\\"><button type=\\\"button\\\" style=\\\"text-align: center\\\" class=\\\"btn btn-primary\\\" (click)=\\\"print()\\\">Print</button></div>\\n\\n  <br>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"container\\\" style=\\\"background-color: white\\\" id=\\\"print-section\\\">\\n<br>\\n  <div class=\\\"table-responsive\\\" style=\\\"text-align: left\\\">\\n    <table class=\\\"table\\\">\\n\\n      <thead>\\n      <tr style=\\\"background-color: blue; color: white\\\" >\\n        <th>#</th>\\n        <th>Name</th>\\n        <th>Quantity</th>\\n        <th>Price</th>\\n      </tr>\\n      </thead>\\n\\n      <tbody *ngFor=\\\"let medicine of medicines; let i = index\\\">\\n\\n      <tr *ngIf=\\\"medicine.name\\\">\\n\\n        <td>{{i+1}}</td>\\n        <td>{{medicine.name}}</td>\\n        <td>{{medicine.quantity}}</td>\\n        <td>{{medicine.price*medicine.quantity}}</td>\\n        <!--<td><i style=\\\"font-size: 16px\\\" class=\\\"fas fa-plus-square\\\"></i></td>-->\\n\\n      </tr>\\n      </tbody>\\n      <tr>\\n        <td><b style=\\\"font-size: 14px\\\">Total</b></td>\\n        <td></td>\\n        <td></td>\\n        <td><b style=\\\"font-size: 14px\\\">${{sum}}</b></td>\\n      </tr>\\n    </table>\\n\\n    <label>Customer Name: <span style=\\\"font-family: 'Times New Roman'\\\">{{customerName}}</span></label>\\n    <br>\\n    <label>Mobile Number: <span style=\\\"font-family: 'Times New Roman'\\\">{{customerNumber}}</span></label>\\n\\n    <!--<button type=\\\"button\\\" (click)=\\\"print()\\\">Print</button>-->\\n\\n  </div>\\n\\n</div>\\n\\n<br><br>\\n\\n<div class=\\\"container\\\" style=\\\"background-color: white\\\">\\n\\n  <br>\\n\\n  <div class=\\\"table-responsice\\\">\\n    <nav class=\\\"navbar navbar-inverse\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">Medicines</span></a>\\n        </div>\\n\\n\\n        <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n          <div class=\\\"input-group\\\">\\n            <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\" (keyup)=\\\"searchTerm$.next($event.target.value)\\\">\\n\\n            <div class=\\\"input-group-btn\\\">\\n              <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                <i class=\\\"glyphicon glyphicon-search\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </nav>\\n\\n    <!--<ul *ngIf=\\\"results\\\">-->\\n      <!--<li *ngFor=\\\"let result of results | slice:0:9\\\">-->\\n        <!--<a href=\\\"{{ result.latest }}\\\" target=\\\"_blank\\\">-->\\n          <!--{{ result.name }}-->\\n        <!--</a>-->\\n      <!--</li>-->\\n    <!--</ul>-->\\n\\n\\n    <table *ngIf=\\\"results\\\"  class=\\\"table\\\">\\n      <thead>\\n      <tr style=\\\"background-color: blue; color: white\\\">\\n        <th>#</th>\\n        <th>Name</th>\\n        <th>Generic</th>\\n        <th>Type</th>\\n        <th>Price</th>\\n        <th>Quantity</th>\\n        <th>Add To Cart</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let medicine of results | slice:0:9; let i = index\\\">\\n\\n        <td>{{i+1}}</td>\\n        <td>{{medicine.name}}</td>\\n        <td>{{medicine.generic}}</td>\\n        <td>{{medicine.type}}</td>\\n        <td>{{medicine.price}}</td>\\n        <td>{{medicine.quantity}}</td>\\n        <td>\\n          <a (click)=\\\"addToCart(medicine)\\\" class=\\\"btn  btn-sm btn-info\\\">\\n            <i style=\\\"font-size: 18px\\\" class=\\\"fa fa-plus-circle\\\"></i></a>\\n        </td>\\n\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <table *ngIf=\\\"!results\\\" class=\\\"table\\\">\\n      <thead>\\n      <tr style=\\\"background-color: blue; color: white\\\">\\n        <th>#</th>\\n        <th>Name</th>\\n        <th>Generic</th>\\n        <th>Type</th>\\n        <th>Price</th>\\n        <th>Quantity</th>\\n        <th>Add To Cart</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let medicine of pagedItems; let i = index\\\">\\n\\n        <td>{{i+1}}</td>\\n        <td>{{medicine.name}}</td>\\n        <td>{{medicine.generic}}</td>\\n        <td>{{medicine.type}}</td>\\n        <td>{{medicine.price}}</td>\\n        <td>{{medicine.quantity}}</td>\\n        <td *ngIf=\\\"medicine.quantity\\\">\\n          <a (click)=\\\"addToCart(medicine)\\\" class=\\\"btn  btn-sm btn-info\\\">\\n            <i style=\\\"font-size: 18px\\\" class=\\\"fa fa-plus-circle\\\"></i></a>\\n        </td>\\n\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <!-- items being paged -->\\n  <!--<div *ngFor=\\\"let item of pagedItems\\\">-->\\n  <!--{{item.name}}-->\\n  <!--</div>-->\\n\\n  <div class=\\\"text-center\\\">\\n    <!-- pager -->\\n    <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n        <a (click)=\\\"setPage(1)\\\">First</a>\\n      </li>\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n        <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\n      </li>\\n      <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n        <a (click)=\\\"setPage(page)\\\">{{page}}</a>\\n      </li>\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n        <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\n      </li>\\n      <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n        <a (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/salesman-dashboard/salesman-dashboard.component.html\n// module id = ./src/app/components/salesman-dashboard/salesman-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { PagerServicesService} from \"../../services/pager-services.service\";\nimport { Medicine} from \"../../model/medicine\";\nimport { Cart} from \"../../model/cart\";\nimport { Router, NavigationExtras} from \"@angular/router\";\nimport { Subject } from 'rxjs/Subject';\n\nimport { MedicineService} from \"../../services/medicine.service\";\nimport {SearchService} from \"../../services/search-service.service\";\n\n@Component({\n  selector: 'app-salesman-dashboard',\n  templateUrl: './salesman-dashboard.component.html',\n  styleUrls: ['./salesman-dashboard.component.css']\n})\nexport class SalesmanDashboardComponent implements OnInit {\n\n\n  results: Object;\n  searchTerm$ = new Subject<string>();\n\n  constructor(\n    private medicineService: MedicineService,\n    private pagerService: PagerServicesService,\n    private router: Router,\n    private searchService: SearchService\n  ) {\n    this.searchService.search(this.searchTerm$)\n      .subscribe(results => {\n        this.results = results.data;\n      });\n  }\n\n\n  print(): void {\n    let printContents, popupWin;\n    printContents = document.getElementById('print-section').innerHTML;\n    popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n          <title style=\"font-size: 16px\">Invoice List</title>\n          <style>\n          //........Customized style.......\n          tr{\n          margin-left: 20px;\n          }\n          </style>\n        </head>\n    <body onload=\"window.print();window.close()\">${printContents}</body>\n      </html>`\n    );\n    popupWin.document.close();\n  }\n\n  //medicines = [new Cart()];\n\n  medicines: Array<Cart> = new Array<Cart>();\n\n  medicine = new Cart();\n\n  sum:number = 0;\n  // array of all items to be paged\n  private allItems: any[];\n\n  // pager object\n  pager: any = {};\n\n  // paged items\n  pagedItems: any[];\n\n  private customerName;\n  private customerNumber;\n\n  ngOnInit() {\n\n\n    this.medicineService.getMedicine().subscribe(res=>{\n\n\n      this.allItems = res.data;;\n\n      // initialize to page 1\n      this.setPage(1);\n\n    })\n\n    if(localStorage.getItem('cart'))\n    this.medicines = JSON.parse(localStorage.getItem('cart'));\n    this.sum = 0;\n\n    if(this.medicines)\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n    }\n  }\n\n\n  setPage(page: number) {\n    // get pager object from service\n    this.pager = this.pagerService.getPager(this.allItems.length, page);\n\n    // get current page of items\n    this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\n  }\n\n  addToCart(medicine){\n\n\n    this.medicine  = new Cart();\n\n    var found = this.medicines.find(function(element) {\n      return element.name == medicine.name;\n    });\n    //\n    // console.log('Found');\n    // console.log(found);\n\n    if(found) {\n      if (found.name == medicine.name) {\n        for (let i = 0; i < this.medicines.length; i++)\n          if (this.medicines[i].name == medicine.name) {\n            this.medicines[i].quantity = this.medicines[i].quantity + 1;\n            this.allItems[i].quantity--;\n\n            console.log('Quantity: '+this.allItems[i].quantity);\n\n            // this.sum += this.medicines[i].quantity* this.medicines[i].price;\n            // console.log(this.medicines[i].quantity)\n          }\n      }\n    }\n    else {\n      this.medicine._id = medicine._id;\n      this.medicine.name = medicine.name;\n      this.medicine.price = medicine.price;\n      this.medicine.quantity = 1;\n\n      for (let i=0; i<this.allItems.length;i++)\n      {\n        if(this.medicine.name == this.allItems[i].name)\n          this.allItems[i].quantity--;\n      }\n\n      // this.sum += this.medicine.quantity* this.medicine.price;\n\n      this.medicines.push(this.medicine);\n\n    }\n\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n\n      // console.log(this.medicines);\n\n\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n\n\n  }\n\n  removeFromCart(cnt,medicine){\n    for (let i = 0; i < this.medicines.length; i++)\n      if (this.medicines[i].name == medicine.name) {\n\n        this.medicines[i].quantity--;\n        if(this.medicines[i].quantity<=0)\n          this.medicines.splice(i,1);\n        // console.log(this.medicines[i].quantity)\n      }\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n  }\n\n  removeAllFromCart(medicine){\n    for (let i = 0; i < this.medicines.length; i++)\n      if (this.medicines[i].name == medicine.name) {\n\n          this.medicines.splice(i,1);\n        // console.log(this.medicines[i].quantity)\n      }\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n  }\n\n  updateTheMedicine(medicine){\n    console.log(medicine._id);\n\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n        \"_id\": medicine._id,\n        \"quantity\": medicine.quantity\n      }\n    };\n\n\n\n    for (let i = 0; i < this.medicines.length; i++)\n      if (this.medicines[i].name == medicine.name) {\n\n        this.medicines[i].quantity = 0;\n        if(this.medicines[i].quantity<=0)\n          this.medicines.splice(i,1);\n        // console.log(this.medicines[i].quantity)\n      }\n\n    this.sum = 0;\n\n    for (let i = 0; i < this.medicines.length; i++)\n    {\n      this.sum = this.sum + this.medicines[i].price * this.medicines[i].quantity;//here price and quantity of type number\n\n      console.log(typeof this.sum);//but this print NaN\n    }\n    localStorage.setItem('cart',JSON.stringify(this.medicines));\n\n    this.router.navigate(['update-medicine'], navigationExtras);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/salesman-dashboard/salesman-dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/salesman/salesman.component.css\n// module id = ./src/app/components/salesman/salesman.component.css\n// module chunks = main","module.exports = \"<div>\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><span style=\\\"font-family: 'Times New Roman'\\\">PMS</span></a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li *ngIf=\\\"adminOrManager=='Admin'\\\"><a href=\\\"/aDashboard\\\">Admin Home</a></li>\\n        <li *ngIf=\\\"adminOrManager=='Manager'\\\"><a href=\\\"/mDashboard\\\">Manager Dashboard</a></li>\\n        <li *ngIf=\\\"adminOrManager=='Admin' || adminOrManager=='Manager'\\\"><a href=\\\"/manager\\\">Manager</a></li>\\n        <li><a href=\\\"/pharmasist\\\">Pharmasist</a></li>\\n        <li class=\\\"active\\\"><a href=\\\"#\\\">Salesman</a></li>\\n        <!--<li><a href=\\\"#\\\">Sales Report</a></li>-->\\n      </ul>\\n\\n      <form  class=\\\"navbar-form navbar-right\\\" action=\\\"/action_page.php\\\">\\n        <div class=\\\"input-group\\\">\\n          <!--<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"search\\\">-->\\n          <!--<button style=\\\"text-decoration: none\\\">Log Out</button>-->\\n\\n          <button (click)=\\\"logout()\\\" style=\\\"text-decoration: none\\\" class=\\\"btn btn-warning\\\">Log Out</button>\\n\\n        </div>\\n      </form>\\n\\n    </div>\\n  </nav>\\n\\n  <div  class=\\\"container\\\" >\\n\\n\\n    <div class=\\\"col-md-3 pull-right\\\">\\n      <a (click)=\\\"managerAdd()\\\" class=\\\"btn btn-block btn-lg btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#mymodal\\\">\\n        <i class=\\\"fas fa-users-cog\\\" id=\\\"icone_grande\\\"></i> <br><br>\\n        <span  class=\\\"texto_grande\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Add Salesman</span></a>\\n    </div>\\n\\n    <h3 style=\\\"font-family: 'Times New Roman'; color: white\\\">List of Salesman</h3>\\n    <br>\\n\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n\\n    <br>\\n\\n    <div class=\\\"table-responsice\\\" style=\\\"color: white\\\">\\n      <table  class=\\\"table\\\">\\n        <thead>\\n        <tr style=\\\"background-color: azure;color: black\\\">\\n\\n          <th>First Name</th>\\n          <th>Last Name</th>\\n          <th>Username</th>\\n          <th>Update</th>\\n          <th>Delete</th>\\n        </tr>\\n        </thead>\\n        <tbody *ngFor=\\\"let manger of manager; let i = index\\\">\\n        <tr *ngIf=\\\"manger.firstName\\\">\\n          <td>{{manger.firstName}}</td>\\n          <td>{{manger.lastName}}</td>\\n          <td>{{manger.username}}</td>\\n          <td>\\n            <a (click)=\\\"updateManager(manger._id)\\\" class=\\\"btn  btn-sm btn-warning\\\">\\n              <i class=\\\"fas fa-wrench\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n          <td>\\n            <a (click)=\\\"salesManAdd()\\\" class=\\\"btn  btn-sm btn-danger\\\">\\n              <i class=\\\"fas fa-trash\\\" id=\\\"icone_grande\\\"></i></a>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/salesman/salesman.component.html\n// module id = ./src/app/components/salesman/salesman.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../../model/user\";\nimport {ToasterServiceService} from \"../../services/toaster-service.service\";\n\n@Component({\n  selector: 'app-salesman',\n  templateUrl: './salesman.component.html',\n  styleUrls: ['./salesman.component.css']\n})\nexport class SalesmanComponent implements OnInit {\n\n  constructor(\n\n    private authServiec: AuthService,\n    private router: Router,\n    private toasterService: ToasterServiceService\n  ) { }\n\n\n\n  adminOrManager:any;\n\n\n  manager = [new User()];\n\n  ngOnInit() {\n\n    if(localStorage.getItem('category'))\n      this.adminOrManager = localStorage.getItem('category');\n    this.authServiec.getAllUser().subscribe( res=>{\n      for(let i=0; i<res.data.length; i++)\n      {\n        if(res.data[i].category==='Salesman' && res.data[i].firstName) {\n          this.manager.push(res.data[i]);\n          console.log(this.manager);\n        }\n\n      }\n\n\n\n    })\n  }\n\n  adminHome(){\n    this.router.navigate(['/aDashboard']);\n  }\n\n  managerAdd()\n  {\n    let id= this.manager[1].category;\n    this.router.navigate([`/addUser/${id}`]);\n  }\n\n  updateManager(id){\n    this.router.navigate([`/update-manager/${id}`])\n  }\n\n  logout(){\n    this.authServiec.logout();\n    this.toasterService.Success('Successfully logout!');\n    this.router.navigate(['/login']);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/salesman/salesman.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-manager/update-manager.component.css\n// module id = ./src/app/components/update-manager/update-manager.component.css\n// module chunks = main","module.exports = \"<div  class=\\\"bg\\\">\\n  <div *ngIf=\\\"user\\\" class=\\\"container\\\">\\n\\n    <h1 style=\\\"margin-top: 1%;text-align: center; font-family: 'Times New Roman'; color: blue\\\">Update {{user.category}}</h1>\\n\\n    <div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\n      <div style=\\\"margin-left: 15%\\\" class=\\\"col-xs-8 col-sm-8 col-md-8 \\\">\\n        <form *ngIf=\\\"user\\\" (submit)=\\\"onUpdate(user)\\\" role=\\\"form\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label>First Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"first_name\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"First Name\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Last Name</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"last_name\\\"  class=\\\"form-control input-sm\\\" placeholder=\\\"Email Address\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Staff Id</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.staffId\\\" name=\\\"last_name\\\"  class=\\\"form-control input-sm\\\" placeholder=\\\"Email Address\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Address</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.address\\\" name=\\\"last_name\\\"  class=\\\"form-control input-sm\\\" placeholder=\\\"Email Address\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Phone</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.phone\\\" name=\\\"last_name\\\"  class=\\\"form-control input-sm\\\" placeholder=\\\"Email Address\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"last_name\\\"  class=\\\"form-control input-sm\\\" placeholder=\\\"Email Address\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>User Name</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"last_name\\\"  class=\\\"form-control input-sm\\\" placeholder=\\\"Email Address\\\">\\n          </div>\\n\\n\\n          <input type=\\\"submit\\\" value=\\\"Update\\\" class=\\\"btn btn-info btn-block\\\">\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n  <div style=\\\"height:20px\\\">\\n\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-manager/update-manager.component.html\n// module id = ./src/app/components/update-manager/update-manager.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { AuthService} from \"../../services/auth.service\";\nimport {FormControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { User} from \"../../model/user\";\nimport { ToasterServiceService} from \"../../services/toaster-service.service\";\nimport { Location} from \"@angular/common\";\n\n@Component({\n  selector: 'app-update-manager',\n  templateUrl: './update-manager.component.html',\n  styleUrls: ['./update-manager.component.css']\n})\nexport class UpdateManagerComponent implements OnInit {\n\n\n\n  user = new User();\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private location: Location,\n    private toasterService: ToasterServiceService\n  ) { }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params.id;\n\n    this.authService.getSingleUser(id).subscribe(res=>{\n        this.user = res.data;\n        console.log(this.user.firstName);\n    })\n\n\n  }\n\n  onUpdate(user){\n      this.authService.updateUser(user).subscribe( res=>{\n        this.toasterService.Success(\"Successfully updated!\");\n        this.location.back();\n        console.log(res);\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/update-manager/update-manager.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-medicine/update-medicine.component.css\n// module id = ./src/app/components/update-medicine/update-medicine.component.css\n// module chunks = main","module.exports = \"<div  class=\\\"bg\\\">\\n  <div *ngIf=\\\"medicine\\\" class=\\\"container\\\">\\n\\n    <h1 style=\\\"margin-top: 1%;text-align: center; font-family: 'Times New Roman'; color: white\\\">Update {{medicine.name}}</h1>\\n\\n    <div class=\\\"row\\\" style=\\\"margin-top:20px\\\">\\n      <div style=\\\"margin-left: 15%; color: white\\\" class=\\\"col-xs-8 col-sm-8 col-md-8 \\\">\\n        <form *ngIf=\\\"medicine\\\" (submit)=\\\"onUpdate(medicine)\\\" role=\\\"form\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"medicine.name\\\" name=\\\"name\\\" class=\\\"form-control input-sm\\\" >\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Generic</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"medicine.generic\\\" name=\\\"generic\\\" class=\\\"form-control input-sm\\\" >\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Company</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"medicine.company\\\" name=\\\"company\\\" class=\\\"form-control input-sm\\\" >\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Price</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"medicine.price\\\" name=\\\"price\\\" class=\\\"form-control input-sm\\\" >\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Quantity</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"medicine.quantity\\\" name=\\\"quantity\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"First Name\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Type</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"medicine.type\\\" name=\\\"Type\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"First Name\\\">\\n          </div>\\n\\n\\n\\n          <input type=\\\"submit\\\" value=\\\"Update\\\" class=\\\"btn btn-info btn-block\\\">\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n\\n\\n  </div>\\n\\n  <div style=\\\"height:20px\\\">\\n\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/update-medicine/update-medicine.component.html\n// module id = ./src/app/components/update-medicine/update-medicine.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Medicine} from \"../../model/medicine\";\nimport { MedicineService} from \"../../services/medicine.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { ToasterServiceService} from \"../../services/toaster-service.service\";\nimport { Location} from \"@angular/common\";\n\n@Component({\n  selector: 'app-update-medicine',\n  templateUrl: './update-medicine.component.html',\n  styleUrls: ['./update-medicine.component.css']\n})\nexport class UpdateMedicineComponent implements OnInit {\n\n  constructor(\n    private medicienService: MedicineService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toasterService: ToasterServiceService,\n    private location: Location\n  ) { }\n\n  medicine =  new Medicine();\n\n  private quantity:any = 0;\n\n  ngOnInit() {\n\n    let id2;\n\n    this.route.queryParams.subscribe(params => {\n      console.log(params[\"_id\"]);\n      id2 = params[\"_id\"];\n      console.log(params[\"quantity\"]);\n      this.quantity = params[\"quantity\"];\n    });\n\n    let id = this.route.snapshot.params.id || id2;\n    this.medicienService.getSingleMedicine(id).subscribe(res=>{\n      this.medicine = res.data;\n      this.medicine.quantity -= this.quantity;\n      if(this.quantity>0){\n        this.medicienService.updateMedicine(this.medicine).subscribe(res=>{\n          // console.log('In update' + res.data);\n\n          this.router.navigate(['/sDashboard']);\n        })\n      }\n    })\n\n\n\n  }\n\n  onUpdate(medicine)\n  {\n    this.medicienService.updateMedicine(medicine).subscribe(res=>{\n      // console.log('In update' + res.data);\n\n      this.toasterService.Success(\"Successfully Updated!\");\n      this.router.navigate(['/pDashboard']);\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/update-medicine/update-medicine.component.ts","module.exports = \"table tr:nth-child(even) {\\r\\n  background-color: rgba(25, 207, 193, 0.7);\\r\\n  color: white;\\r\\n}\\r\\ntable tr:nth-child(odd) {\\r\\n  color: white;\\r\\n  background-color: rgba(145, 142, 176, 0.7);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/view-medicine/view-medicine.component.css\n// module id = ./src/app/components/view-medicine/view-medicine.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"bg\\\">\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"table-responsice\\\">\\n    <table  class=\\\"table\\\">\\n      <thead>\\n        <tr style=\\\"background-color: blue; color: white\\\">\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Generic</th>\\n          <th>Type</th>\\n          <th>Price</th>\\n        </tr>\\n\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let medicine of medicines; let i = index\\\">\\n\\n          <td>{{i+1}}</td>\\n          <td>{{medicine.name}}</td>\\n          <td>{{medicine.generic}}</td>\\n          <td>{{medicine.type}}</td>\\n          <td>{{medicine.price}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n</div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/view-medicine/view-medicine.component.html\n// module id = ./src/app/components/view-medicine/view-medicine.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {MedicineService} from \"../../services/medicine.service\";\nimport {Router} from \"@angular/router\";\nimport { Medicine} from \"../../model/medicine\";\n\n@Component({\n  selector: 'app-view-medicine',\n  templateUrl: './view-medicine.component.html',\n  styleUrls: ['./view-medicine.component.css']\n})\nexport class ViewMedicineComponent implements OnInit {\n\n  medicines = [new Medicine()];\n\n  constructor(\n    private medicineService: MedicineService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.medicineService.getMedicine().subscribe(res=>{\n      // console.log(res.data);\n      this.medicines = res.data;\n\n     // console.log(this.medicine);\n\n\n      for(var i=0; i<this.medicines.length; i++)\n        console.log(this.medicines[i].price);\n    })\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/view-medicine/view-medicine.component.ts","import { Injectable} from \"@angular/core\";\r\nimport { Router , CanActivate} from \"@angular/router\";\r\nimport { AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGaurd implements CanActivate{\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ){\r\n\r\n  }\r\n\r\n  canActivate(){\r\n    if(this.authService.loggedIn()&&localStorage.getItem('category')=='Admin'){\r\n      return true;\r\n    }\r\n\r\n\r\n    else {\r\n\r\n      window.alert(\"You don't have permission to view this page, Login as Admin first\");\r\n\r\n      this.router.navigate(['/login']);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gaurds/auth.gaurd.ts","import { Injectable} from \"@angular/core\";\r\nimport { Router , CanActivate} from \"@angular/router\";\r\nimport { AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class ManagerGaurd implements CanActivate{\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ){\r\n\r\n  }\r\n\r\n  canActivate(){\r\n    if(this.authService.loggedIn()&&localStorage.getItem('category')=='Manager' || localStorage.getItem('category')=='Admin'){\r\n      return true;\r\n    }\r\n\r\n\r\n    else {\r\n\r\n      window.alert(\"You don't have permission to view this page, Login as Manager or Admin first\");\r\n\r\n      this.router.navigate(['/login']);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gaurds/manager.gaurd.ts","import { Injectable} from \"@angular/core\";\r\nimport { Router , CanActivate} from \"@angular/router\";\r\nimport { AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class PharmasistGuard implements CanActivate{\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ){\r\n\r\n  }\r\n\r\n  canActivate(){\r\n    if(this.authService.loggedIn()&&localStorage.getItem('category')=='Pharmasist'){\r\n      return true;\r\n    }\r\n\r\n\r\n    else {\r\n\r\n      window.alert(\"You don't have permission to view this page, Login as Pharmasist first\");\r\n\r\n      this.router.navigate(['/login']);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gaurds/pharmasist.guard.ts","import { Injectable} from \"@angular/core\";\r\nimport { Router , CanActivate} from \"@angular/router\";\r\nimport { AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class SalesmanGaurd implements CanActivate{\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ){\r\n\r\n  }\r\n\r\n  canActivate(){\r\n    if(this.authService.loggedIn()&&localStorage.getItem('category')=='Salesman'){\r\n      return true;\r\n    }\r\n\r\n\r\n    else {\r\n\r\n      window.alert(\"You don't have permission to view this page, Login as Salesman first\");\r\n\r\n      this.router.navigate(['/login']);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gaurds/salesman.gaurd.ts","export class Cart{\r\n  constructor(){}\r\n  _id: String;\r\n  name: String;\r\n  quantity:number;\r\n  price:number\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/cart.ts","export class Medicine{\r\n  constructor(){}\r\n  name: String;\r\n  generic: String;\r\n  type: String;\r\n  company: String;\r\n  price: String;\r\n  quantity: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/medicine.ts","export class User{\r\n  constructor(){}\r\n  firstName: String;\r\n  lastName:  String;\r\n  staffId:  String;\r\n  address:  String;\r\n  phone:  String;\r\n  email:  String;\r\n  username:  String;\r\n  password:  String;\r\n  category:  String;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/user.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http} from \"@angular/http\";\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired} from \"angular2-jwt\";\n\nimport { environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class AuthService {\n\n  authToken: any;\n  user: any;\n\n  constructor(\n    private http : Http\n  ) { }\n\n  getUser(userCredentials){\n\n    let headers = new Headers();\n    headers.append('Content-type','application/json');\n\n    return this.http.post(`${environment.baseUrl}/auth/login`,userCredentials,{headers:headers})\n      .map(res => res.json());\n  }\n\n  getCategory(){\n\n    let headers = new Headers();\n    headers.append('Content-type','application/json');\n\n    return this.http.get(`${environment.baseUrl}/category`,{headers:headers})\n      .map(res => res.json());\n  }\n\n  getAllUser()\n  {\n\n    let headers = new Headers();\n\n    headers.append('Content-type','application/json');\n\n    return this.http.get(`${environment.baseUrl}/user`,{headers:headers})\n      .map(res => res.json());\n\n  }\n\n  getSingleUser(id)\n  {\n\n    let headers = new Headers();\n\n    headers.append('Content-type','application/json');\n\n    return this.http.get(`${environment.baseUrl}/user/${id}`,{headers:headers})\n      .map(res => res.json());\n\n  }\n\n  postUser(user)\n  {\n\n    let headers = new Headers();\n\n    headers.append('Content-type','application/json');\n\n    return this.http.post(`${environment.baseUrl}/user`,user,{headers:headers})\n      .map(res => res.json());\n  }\n\n  updateUser(user){\n\n\n    let headers = new Headers();\n\n    headers.append('Content-type','application/json');\n\n    return this.http.patch(`${environment.baseUrl}/user/${user._id}`,user,{headers:headers})\n      .map(res => res.json());\n\n  }\n\n\n  storeUserData(token,user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user',JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  loggedIn(){\n    return tokenNotExpired('id_token');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http} from \"@angular/http\";\nimport { Observable} from \"rxjs/Observable\";\nimport 'rxjs/add/operator/map';\n\nimport { environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class MedicineService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  getMedicine(){\n    let headers = new Headers();\n    headers.append('Content-type','application/json');\n\n  return this.http.get(`${environment.baseUrl}/medicine`,{headers:headers})\n    .map(res => res.json());\n  }\n\n  createMedicine(medicine){\n\n    let headers = new Headers();\n    headers.append('Content-type','application/json');\n\n    return this.http.post(`${environment.baseUrl}/medicine`,medicine,{headers:headers})\n      .map(res => res.json());\n  }\n\n  getSingleMedicine(id){\n\n    let headers = new Headers();\n    headers.append('Content-type','application/json');\n\n    return this.http.get(`${environment.baseUrl}/medicine/${id}`,{headers:headers})\n      .map(res => res.json());\n  }\n\n  updateMedicine(medicine)\n  {\n\n    let headers = new Headers();\n    headers.append('Content-type','application/json');\n\n    return this.http.patch(`${environment.baseUrl}/medicine/${medicine._id}`,medicine,{headers:headers})\n      .map(res => res.json());\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/medicine.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PagerServicesService {\n  getPager(totalItems: number, currentPage: number = 1, pageSize: number = 7) {\n    // calculate total pages\n    let totalPages = Math.ceil(totalItems / pageSize);\n\n    // ensure current page isn't out of range\n    if (currentPage < 1) {\n      currentPage = 1;\n    } else if (currentPage > totalPages) {\n      currentPage = totalPages;\n    }\n\n    let startPage: number, endPage: number;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    let startIndex = (currentPage - 1) * pageSize;\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/pager-services.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\n\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class SearchService {\n  baseUrl: string = 'https://api.cdnjs.com/libraries';\n  queryUrl: string = '?search=';\n\n  constructor(private http: Http) { }\n\n  search(terms: Observable<string>) {\n    return terms.debounceTime(400)\n      .distinctUntilChanged()\n      .switchMap(term => this.searchEntries2(term));\n  }\n\n  private query = {\n    searchKey:String\n  }\n\n  searchEntries(term='null') {\n    return this.http\n      .get(this.baseUrl + this.queryUrl + term)\n      .map(res => res.json());\n  }\n\n  searchEntries2(term) {\n\n    let headers = new Headers();\n    headers.append('Content-type','application/json');\n\n    return this.http.get(`${environment.baseUrl}/medicine/search/${term}`,{headers:headers})\n      .map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/search-service.service.ts","import { Injectable } from '@angular/core';\ndeclare var toastr:any;\n\n@Injectable()\nexport class ToasterServiceService {\n\n  constructor() { }\n\n  Success(title : string, message?:string){\n    toastr.success(title,message);\n  }\n\n  Warning(title : string, message?:string){\n    toastr.warning(title,message);\n  }\n\n  Error(title : string, message?:string){\n    toastr.error(title,message);\n  }\n\n  Info(title : string, message?:string){\n    toastr.info(title,message);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/toaster-service.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidationService {\n        constructor() { }\n\n\n        validateRegister(user){\n          if(user.firstName == '' || user.email == '' || user.username == ''){\n            return false\n          }\n          else {\n            return true\n          }\n\n\n        }\n\n  validateMedicine(medicine){\n\n    if(medicine.name == '' || medicine.company == '' || medicine.price == '' ||medicine.quantity == '' || medicine.type == ''){\n      return false\n    }\n    else {\n      return true\n    }\n\n\n  }\n\n        validateEmail(email){\n\n          const  re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          return re.test(email);\n\n        }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/validation.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: '/api'\n  // baseUrl: '/api'\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}